/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import control.ControleProduto;
import control.MetodosPadrao;
import dao.Conecta_Banco;
import dao.Conecta_Tabela;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.JTableHeader;
import model.ModeloProduto;

/**
 *
 * @author Murilo Santos
 */
public class EntradaEstoque extends javax.swing.JInternalFrame {

    /**
     * Creates new form EntradaEstoque
     */
    
    String usuario ="";
    
    public void passaDados(String user)
    {
        usuario = user;
    }
    public EntradaEstoque() {
        initComponents();
        preencherTabela("SELECT PRD.CD_BARRAS, PRD.NM_PRODUTO, PRD.ID, PRD.DS_QUANTIDADE,\n" +
        "PRD.VL_COMPRA, PRD.VL_VENDA, FORN.NM_FORNECEDOR, TP.NM_TIPO FROM PRODUTOS AS PRD\n" +
        "JOIN FORNECEDORES AS FORN ON FORN.ID = PRD.ID_FORNECEDOR JOIN TIPO_PRODUTO AS TP\n" +
        "ON TP.ID = PRD.ID_TIPO JOIN ESTOQUE AS ESTQ ON ESTQ.ID_PRODUTO = PRD.ID "
        + "WHERE ESTQ.ESTOQUE >=0 AND PRD.DS_STATUS !='I'");
    }
    MetodosPadrao metodo = new MetodosPadrao();
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldNomeProduto = new javax.swing.JTextField();
        jButtonPesquisar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableProdutos = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jTextFieldEstoqueAtual = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldEstoqueRecomendado = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldFornecedor = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldValorVenda = new javax.swing.JTextField();
        jTextFieldValorCompra = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldSituacaoEstoque = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTextFieldProduto = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jTextFieldTipoProduto = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextFieldCodigoBarras = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jTextFieldEstoqueEntrada = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jTextFieldSituacaoEstoqueFutura = new javax.swing.JTextField();
        jButtonConfirmarEntrada = new javax.swing.JButton();

        setClosable(true);
        setMaximizable(true);
        setTitle("Entrada de Produtos");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Coringa.png"))); // NOI18N

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(34, 34, 34));

        jLabel1.setFont(new java.awt.Font("Old English Text MT", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Entrada de Produtos");

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/iconeCoringa.png"))); // NOI18N
        jLabel8.setToolTipText("");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 620, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addGap(42, 42, 42))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel8))
                .addGap(20, 20, 20))
        );

        jLabel7.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel7.setText("Produto:");

        jTextFieldNomeProduto.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTextFieldNomeProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldNomeProdutoKeyPressed(evt);
            }
        });

        jButtonPesquisar.setBackground(new java.awt.Color(68, 68, 66));
        jButtonPesquisar.setForeground(new java.awt.Color(255, 255, 255));
        jButtonPesquisar.setText("Pesquisar");
        jButtonPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPesquisarActionPerformed(evt);
            }
        });

        jTableProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTableProdutos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableProdutosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableProdutos);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTextFieldEstoqueAtual.setEditable(false);
        jTextFieldEstoqueAtual.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setText("Estoque Atual:");

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setText("Estoque Recomendado:");

        jTextFieldEstoqueRecomendado.setEditable(false);
        jTextFieldEstoqueRecomendado.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setText("Fornecedor:");

        jTextFieldFornecedor.setEditable(false);
        jTextFieldFornecedor.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setText("Valor de Venda:");

        jTextFieldValorVenda.setEditable(false);
        jTextFieldValorVenda.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jTextFieldValorCompra.setEditable(false);
        jTextFieldValorCompra.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setText("Valor de Compra:");

        jTextFieldSituacaoEstoque.setEditable(false);
        jTextFieldSituacaoEstoque.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel9.setText("Situação do Estoque:");

        jLabel11.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel11.setText("Dados Atuais:");

        jTextFieldProduto.setEditable(false);
        jTextFieldProduto.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTextFieldProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldProdutoKeyReleased(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel12.setText("Produto:");

        jLabel13.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel13.setText("Tipo do Produto:");

        jTextFieldTipoProduto.setEditable(false);
        jTextFieldTipoProduto.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldValorVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldValorCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldSituacaoEstoque))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldProduto))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldEstoqueAtual, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldEstoqueRecomendado, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldFornecedor)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldTipoProduto)))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jLabel11)
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel13)
                        .addComponent(jTextFieldTipoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel12)
                        .addComponent(jTextFieldProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldEstoqueAtual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jTextFieldFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldEstoqueRecomendado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextFieldValorVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jTextFieldValorCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jTextFieldSituacaoEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26))
        );

        jLabel10.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel10.setText("Código de Barras:");

        jTextFieldCodigoBarras.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTextFieldCodigoBarras.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldCodigoBarrasKeyPressed(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTextFieldEstoqueEntrada.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTextFieldEstoqueEntrada.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldEstoqueEntradaFocusLost(evt);
            }
        });
        jTextFieldEstoqueEntrada.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldEstoqueEntradaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldEstoqueEntradaKeyReleased(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel14.setText("Quantidade Entrada:");

        jLabel15.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel15.setText("Entrada:");

        jLabel16.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel16.setText("Situação Futura do Estoque:");

        jTextFieldSituacaoEstoqueFutura.setEditable(false);
        jTextFieldSituacaoEstoqueFutura.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jButtonConfirmarEntrada.setBackground(new java.awt.Color(0, 168, 82));
        jButtonConfirmarEntrada.setForeground(new java.awt.Color(255, 255, 255));
        jButtonConfirmarEntrada.setText("Confirmar Entrada");
        jButtonConfirmarEntrada.setEnabled(false);
        jButtonConfirmarEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConfirmarEntradaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldEstoqueEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldSituacaoEstoqueFutura))
                    .addComponent(jLabel15))
                .addGap(12, 12, 12)
                .addComponent(jButtonConfirmarEntrada)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel16)
                        .addComponent(jTextFieldSituacaoEstoqueFutura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonConfirmarEntrada))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel14)
                        .addComponent(jTextFieldEstoqueEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextFieldCodigoBarras)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonPesquisar)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldNomeProduto)))
                        .addGap(12, 12, 12))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTextFieldNomeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jTextFieldCodigoBarras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonPesquisar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPesquisarActionPerformed
       pesquisar();
    }//GEN-LAST:event_jButtonPesquisarActionPerformed

    private void jTextFieldNomeProdutoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNomeProdutoKeyPressed
        if(KeyEvent.VK_ENTER== evt.getKeyCode())
        {
            pesquisar();
        }
    }//GEN-LAST:event_jTextFieldNomeProdutoKeyPressed

    private void jTextFieldCodigoBarrasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldCodigoBarrasKeyPressed
       if(KeyEvent.VK_ENTER== evt.getKeyCode())
        {
            pesquisar();
        }
    }//GEN-LAST:event_jTextFieldCodigoBarrasKeyPressed

    private void jTableProdutosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableProdutosMouseClicked
        MetodosPadrao metodo = new MetodosPadrao();
        metodo.desfocaCampo(jTextFieldProduto);
        String id= jTableProdutos.getValueAt(jTableProdutos.getSelectedRow(), 7)+"";
        String nome=jTableProdutos.getValueAt(jTableProdutos.getSelectedRow(), 1)+"";
        String tipo=jTableProdutos.getValueAt(jTableProdutos.getSelectedRow(), 6)+"";
        String fornecedor=jTableProdutos.getValueAt(jTableProdutos.getSelectedRow(), 5)+"";
        if(!id.equals(""))
        {
            pesquisarDadosProduto(id,nome,tipo,fornecedor);
            jButtonConfirmarEntrada.setEnabled(true);
        }
    }//GEN-LAST:event_jTableProdutosMouseClicked

    private void jButtonConfirmarEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConfirmarEntradaActionPerformed
    atualizaEstoque();
    }//GEN-LAST:event_jButtonConfirmarEntradaActionPerformed

    private void jTextFieldEstoqueEntradaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldEstoqueEntradaKeyReleased
        try 
        {
            int estoqueEntrada = Integer.parseInt(jTextFieldEstoqueEntrada.getText());
            int estoqueRecomendado = Integer.parseInt(jTextFieldEstoqueRecomendado.getText());
            int estoqueAtual = Integer.parseInt(jTextFieldEstoqueAtual.getText());
            
            int calc = estoqueEntrada+estoqueAtual;
            
            if(calc == estoqueRecomendado)
            {                    

                jTextFieldSituacaoEstoqueFutura.setBackground(new java.awt.Color(0,168,82));
                jTextFieldSituacaoEstoqueFutura.setForeground(Color.white);
                jTextFieldSituacaoEstoqueFutura.setText("NORMAL");
            }
            else if(calc<estoqueRecomendado)
            {
                jTextFieldSituacaoEstoqueFutura.setBackground(new java.awt.Color(156,32,36));
                jTextFieldSituacaoEstoqueFutura.setForeground(Color.white);
                jTextFieldSituacaoEstoqueFutura.setText("NEGATIVO");
            }
            else
            {
                jTextFieldSituacaoEstoqueFutura.setBackground(new java.awt.Color(0,168,82));
                jTextFieldSituacaoEstoqueFutura.setForeground(Color.white);
                jTextFieldSituacaoEstoqueFutura.setText("POSITIVO");
            }
        } 
        catch (Exception e) 
        {
            jTextFieldSituacaoEstoqueFutura.setBackground(new java.awt.Color(156,32,36));
            jTextFieldSituacaoEstoqueFutura.setForeground(Color.white);
            jTextFieldSituacaoEstoqueFutura.setText("ERRO");
        }
        
        
       
    }//GEN-LAST:event_jTextFieldEstoqueEntradaKeyReleased

    private void jTextFieldEstoqueEntradaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldEstoqueEntradaKeyPressed
       if(evt.getKeyCode() == KeyEvent.VK_ENTER)
       {
           atualizaEstoque();
       }
    }//GEN-LAST:event_jTextFieldEstoqueEntradaKeyPressed

    private void jTextFieldProdutoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldProdutoKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldProdutoKeyReleased

    private void jTextFieldEstoqueEntradaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldEstoqueEntradaFocusLost
      metodo.desfocaCampo(jTextFieldEstoqueEntrada);
    }//GEN-LAST:event_jTextFieldEstoqueEntradaFocusLost

    boolean validaValorEntrada()
    {   
        System.out.println("to no método");
       try
       {
           int i = Integer.parseInt(jTextFieldEstoqueEntrada.getText());
           System.out.println("Try");
           if(jTextFieldEstoqueEntrada.getText().isEmpty())
           {
               return false;
           }
           else
           {
               
               System.out.println("I: "+i);
                if(i<=0)
                {
                    JOptionPane.showMessageDialog(null,"O valor informado é negativo ou nulo!","Erro:",JOptionPane.ERROR_MESSAGE);
                    return false;
                }
                else
                {
                    return true;
                } 
           }
                     
       }
       catch(Exception ex)
       {
           JOptionPane.showMessageDialog(null,"O valor informado é inválido!","Erro:",JOptionPane.ERROR_MESSAGE);
           
           metodo.validaCampo(jTextFieldEstoqueEntrada,"Entrada");
           return false;
       }
        
    }
    
    void atualizaEstoque()
    {
        if(!jTextFieldProduto.getText().isEmpty() && validaValorEntrada()==true)
        {
            String id= jTableProdutos.getValueAt(jTableProdutos.getSelectedRow(), 7)+"";
            
            int estoqueAtual = Integer.parseInt(jTextFieldEstoqueAtual.getText());
            int estoqueEntrada = Integer.parseInt(jTextFieldEstoqueEntrada.getText());
            
            int estoqueFuturo = estoqueAtual + estoqueEntrada;
            
            int estoqueRecomendavel =  Integer.parseInt(jTextFieldEstoqueRecomendado.getText());
            
            System.out.println("ESTOQUE FUTURO: "+estoqueFuturo);
            System.out.println("ESTOQUE ATUAL: "+estoqueAtual);
            System.out.println("ESTOQUE ENTRADA: "+estoqueEntrada);
            
            ModeloProduto produto = new ModeloProduto();
            
            if(estoqueFuturo < estoqueRecomendavel)
            {
                produto.setStatus_estoque("S");
            }
            else
            {
                produto.setStatus_estoque("N");
            }
            
            
            produto.setId(Integer.parseInt(id));
            produto.setDs_movimentacao("E");
            produto.setId_usuario(Integer.parseInt(usuario));
            produto.setId_responsavel(Integer.parseInt(usuario));
            produto.setEstoque_inicial(estoqueAtual);
            produto.setEstoque_final(estoqueFuturo);
            produto.setObservacao(null);
            
            
            ControleProduto controle = new ControleProduto();
            controle.gravaHistoricoProduto(produto);
            controle.atualizaEstoqueProduto(produto);
            JOptionPane.showMessageDialog(null,"Entrada Realizada com Sucesso!");
            
            jTextFieldProduto.setText("");
            jTextFieldTipoProduto.setText("");
            jTextFieldEstoqueAtual.setText("");
            jTextFieldEstoqueRecomendado.setText("");
            jTextFieldFornecedor.setText("");
            jTextFieldValorVenda.setText("");
            jTextFieldValorCompra.setText("");
            jTextFieldSituacaoEstoque.setText("");
            jTextFieldSituacaoEstoqueFutura.setText("");
            jTextFieldEstoqueEntrada.setText("");
            
            jTextFieldSituacaoEstoque.setBackground(Color.WHITE);
            jTextFieldSituacaoEstoqueFutura.setBackground(Color.WHITE);
            jTextFieldNomeProduto.requestFocus();
            
            preencherTabela("SELECT PRD.CD_BARRAS, PRD.NM_PRODUTO, PRD.ID, PRD.DS_QUANTIDADE,\n" +
            "PRD.VL_COMPRA, PRD.VL_VENDA, FORN.NM_FORNECEDOR, TP.NM_TIPO FROM PRODUTOS AS PRD\n" +
            "JOIN FORNECEDORES AS FORN ON FORN.ID = PRD.ID_FORNECEDOR JOIN TIPO_PRODUTO AS TP\n" +
            "ON TP.ID = PRD.ID_TIPO JOIN ESTOQUE AS ESTQ ON ESTQ.ID_PRODUTO = PRD.ID WHERE ESTQ.ESTOQUE >0 AND PRD.DS_STATUS !='I'");
        }
        else
        {
            MetodosPadrao metodo = new MetodosPadrao();
            metodo.validaCampo(jTextFieldProduto,"Produto");
            
        }
    }
    
    void pesquisarDadosProduto(String id,String nome, String tipo,String fornecedor)
    {
         Conecta_Banco conecta = new Conecta_Banco();
            //BUSCO O ID DO CLIENTE PELO NOME
            try 
            {

                //System.out.println(nome);
                conecta.conexao();
                conecta.executaSQL("SELECT EST.ESTOQUE, PRD.DS_QUANTIDADE, PRD.VL_COMPRA, PRD.VL_VENDA\n" +
                " FROM PRODUTOS AS PRD JOIN ESTOQUE AS EST ON EST.ID_PRODUTO = PRD.ID JOIN HISTORICO_ESTOQUE AS HS_ESTQ \n" +
                "ON HS_ESTQ.ID_PRODUTO = PRD.ID JOIN FORNECEDORES AS FORN ON FORN.ID = PRD.ID_FORNECEDOR WHERE PRD.ID ="+id+
                " AND PRD.DS_STATUS='A';");
                conecta.rs.last();

                jTextFieldProduto.setText(nome);
                jTextFieldTipoProduto.setText(tipo);
                jTextFieldEstoqueAtual.setText(conecta.rs.getInt("ESTOQUE")+"");
                jTextFieldEstoqueRecomendado.setText(conecta.rs.getInt("DS_QUANTIDADE")+"");
                
                
                String valorVenda = metodo.formataFloats(conecta.rs.getFloat("VL_VENDA"));
                String valorCompra = metodo.formataFloats(conecta.rs.getFloat("VL_COMPRA"));
                jTextFieldValorVenda.setText(valorVenda);
                jTextFieldValorCompra.setText(valorCompra);
                jTextFieldFornecedor.setText(fornecedor);
                
                int estoqueAtual = Integer.parseInt(jTextFieldEstoqueAtual.getText());
                int estoqueRecomendado = Integer.parseInt(jTextFieldEstoqueRecomendado.getText());
                
                if(estoqueAtual == estoqueRecomendado)
                {                    
                    
                    jTextFieldSituacaoEstoque.setBackground(new java.awt.Color(0,168,82));
                    jTextFieldSituacaoEstoque.setForeground(Color.white);
                    jTextFieldSituacaoEstoque.setText("NORMAL");
                }
                else if(estoqueAtual<=0)
                {
                    jTextFieldSituacaoEstoque.setBackground(new java.awt.Color(156,32,36));
                    jTextFieldSituacaoEstoque.setForeground(Color.white);
                    jTextFieldSituacaoEstoque.setText("NEGATIVO OU ZERADO");
                }
                else if(estoqueAtual<estoqueRecomendado)
                {
                    jTextFieldSituacaoEstoque.setBackground(new java.awt.Color(217,55,13));
                    jTextFieldSituacaoEstoque.setForeground(Color.white);
                    jTextFieldSituacaoEstoque.setText("ABAIXO DO RECOMENDADO");
                }              
                else
                {
                    jTextFieldSituacaoEstoque.setBackground(new java.awt.Color(0,168,82));
                    jTextFieldSituacaoEstoque.setForeground(Color.white);
                    jTextFieldSituacaoEstoque.setText("POSITIVO");
                }
            } 
            catch (SQLException ex) 
            {
                JOptionPane.showMessageDialog(null,"Erro ao Encontrar Id do Fornecedor"
                +ex,"Erro:",JOptionPane.ERROR_MESSAGE);
                 
            }
    }
    
    void pesquisar()
    {
        if(!jTextFieldCodigoBarras.getText().isEmpty())
       {
            preencherTabela("SELECT PRD.CD_BARRAS, PRD.NM_PRODUTO, PRD.ID, PRD.DS_QUANTIDADE,\n" +
            "PRD.VL_COMPRA, PRD.VL_VENDA, FORN.NM_FORNECEDOR, TP.NM_TIPO FROM PRODUTOS AS PRD\n" +
            "JOIN FORNECEDORES AS FORN ON FORN.ID = PRD.ID_FORNECEDOR JOIN TIPO_PRODUTO AS TP\n" +
            "ON TP.ID = PRD.ID_TIPO JOIN ESTOQUE AS ESTQ ON ESTQ.ID_PRODUTO = PRD.ID WHERE PRD.CD_BARRAS ="+jTextFieldCodigoBarras.getText()
            +" AND ESTQ.ESTOQUE >=0 AND PRD.DS_STATUS !='I'");
       }
       else if(!jTextFieldNomeProduto.getText().isEmpty())
       {
           preencherTabela("SELECT PRD.CD_BARRAS, PRD.NM_PRODUTO, PRD.ID, PRD.DS_QUANTIDADE,\n" +
            "PRD.VL_COMPRA, PRD.VL_VENDA, FORN.NM_FORNECEDOR, TP.NM_TIPO FROM PRODUTOS AS PRD\n" +
            "JOIN FORNECEDORES AS FORN ON FORN.ID = PRD.ID_FORNECEDOR JOIN TIPO_PRODUTO AS TP\n" +
            "ON TP.ID = PRD.ID_TIPO JOIN ESTOQUE AS ESTQ ON ESTQ.ID_PRODUTO = PRD.ID "
            + "WHERE PRD.NM_PRODUTO LIKE '%"+jTextFieldNomeProduto.getText()+"%' AND "
            + "ESTQ.ESTOQUE >=0 AND PRD.DS_STATUS !='I';");
       }
       else
       {
           preencherTabela("SELECT PRD.CD_BARRAS, PRD.NM_PRODUTO, PRD.ID, PRD.DS_QUANTIDADE,\n" +
            "PRD.VL_COMPRA, PRD.VL_VENDA, FORN.NM_FORNECEDOR, TP.NM_TIPO FROM PRODUTOS AS PRD\n" +
            "JOIN FORNECEDORES AS FORN ON FORN.ID = PRD.ID_FORNECEDOR JOIN TIPO_PRODUTO AS TP\n" +
            "ON TP.ID = PRD.ID_TIPO JOIN ESTOQUE AS ESTQ ON ESTQ.ID_PRODUTO = PRD.ID WHERE ESTQ.ESTOQUE >=0 AND PRD.DS_STATUS !='I'"); 
       }
    }
    
    public void preencherTabela(String SQL) 
     {
         //System.out.println("SQL: "+SQL);

        //MUDANDO A FONTE DO CABEÇALHO
        JTableHeader cabecalho = jTableProdutos.getTableHeader();
        cabecalho.setFont(new java.awt.Font("Arial", 1, 12));

        
        
    
        
        ArrayList dados = new ArrayList();

        Conecta_Banco conecta = new Conecta_Banco();
        conecta.conexao();

        String[] colunas = new String[]{"COD BARRAS","NOME PRODUTO","QUANTIDADE MÍNIMA","VALOR DE COMPRA","VALOR DE VENDA",
        "FORNECEDOR","TIPO PRODUTO","ID"};

        conecta.executaSQL(SQL);
        
        try {
            conecta.rs.first();
            
            do {
                
                String valorVenda = metodo.formataFloats(conecta.rs.getFloat("VL_VENDA"));
                String valorCompra = metodo.formataFloats(conecta.rs.getFloat("VL_COMPRA"));
                
               dados.add(new Object[]{conecta.rs.getString("CD_BARRAS"),
               conecta.rs.getString("NM_PRODUTO").toUpperCase(),conecta.rs.getString("DS_QUANTIDADE"),
               valorCompra,valorVenda,conecta.rs.getString("NM_FORNECEDOR").toUpperCase(),
               conecta.rs.getString("NM_TIPO").toUpperCase(),conecta.rs.getInt("ID")});

            } while (conecta.rs.next());
        } catch (SQLException ex) {
           
            JOptionPane.showMessageDialog(null,"Nenhum dado Encontrado!");
            System.out.println(ex);
             
        }
        
        jTableProdutos.getTableHeader().setReorderingAllowed(false);
        jTableProdutos.setAutoResizeMode(jTableProdutos.AUTO_RESIZE_OFF);
        jTableProdutos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        
        JTableHeader header =  jTableProdutos.getTableHeader();
        DefaultTableCellRenderer centralizado = (DefaultTableCellRenderer) header.getDefaultRenderer();
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);

        Conecta_Tabela ct = new Conecta_Tabela(dados, colunas);
        jTableProdutos.setModel(ct);

        

        jTableProdutos.getColumnModel().getColumn(0).setPreferredWidth(600);
        jTableProdutos.getColumnModel().getColumn(0).setResizable(true);
        
        jTableProdutos.getColumnModel().getColumn(1).setPreferredWidth(300);
        jTableProdutos.getColumnModel().getColumn(1).setResizable(true);
        
        jTableProdutos.getColumnModel().getColumn(2).setPreferredWidth(200);
        jTableProdutos.getColumnModel().getColumn(2).setResizable(true);
        
        jTableProdutos.getColumnModel().getColumn(3).setPreferredWidth(200);
        jTableProdutos.getColumnModel().getColumn(3).setResizable(true);
        
        jTableProdutos.getColumnModel().getColumn(4).setPreferredWidth(200);
        jTableProdutos.getColumnModel().getColumn(4).setResizable(true);
        
        jTableProdutos.getColumnModel().getColumn(5).setPreferredWidth(200);
        jTableProdutos.getColumnModel().getColumn(5).setResizable(true);
        
        jTableProdutos.getColumnModel().getColumn(6).setPreferredWidth(200);
        jTableProdutos.getColumnModel().getColumn(6).setResizable(true);
        
        jTableProdutos.getColumnModel().getColumn(7).setPreferredWidth(200);
        jTableProdutos.getColumnModel().getColumn(7).setResizable(true);
       
        //Ocultando a Coluna STATUS
        jTableProdutos.getColumnModel().getColumn(7).setMinWidth(0);
        jTableProdutos.getColumnModel().getColumn(7).setMaxWidth(0);
       
        jTableProdutos.getTableHeader().setReorderingAllowed(false);
        jTableProdutos.setAutoResizeMode(jTableProdutos.AUTO_RESIZE_OFF);
        jTableProdutos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
      
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonConfirmarEntrada;
    private javax.swing.JButton jButtonPesquisar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableProdutos;
    private javax.swing.JTextField jTextFieldCodigoBarras;
    private javax.swing.JTextField jTextFieldEstoqueAtual;
    private javax.swing.JTextField jTextFieldEstoqueEntrada;
    private javax.swing.JTextField jTextFieldEstoqueRecomendado;
    private javax.swing.JTextField jTextFieldFornecedor;
    private javax.swing.JTextField jTextFieldNomeProduto;
    private javax.swing.JTextField jTextFieldProduto;
    private javax.swing.JTextField jTextFieldSituacaoEstoque;
    private javax.swing.JTextField jTextFieldSituacaoEstoqueFutura;
    private javax.swing.JTextField jTextFieldTipoProduto;
    private javax.swing.JTextField jTextFieldValorCompra;
    private javax.swing.JTextField jTextFieldValorVenda;
    // End of variables declaration//GEN-END:variables
}
