/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import control.ControleProduto;
import control.MetodosPadrao;
import dao.Conecta_Banco;
import dao.Conecta_Tabela;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.JTableHeader;
import model.ModeloProduto;

/**
 *
 * @author muril
 */
public class CadastroProdutos extends javax.swing.JInternalFrame {

    /**
     * Creates new form CadastroProdutos
     */
    
   
    public CadastroProdutos() {
        initComponents();
        populaComboFornecedores();
        populaComboTipoProduto();
        jButtonEditar.setEnabled(false);
        jButtonInativar.setEnabled(false);
        
        preencherTabela("SELECT PRD.CD_BARRAS, PRD.NM_PRODUTO, PRD.DS_STATUS, PRD.DS_QUANTIDADE,\n" +
"        PRD.VL_COMPRA, PRD.VL_VENDA, FORN.NM_FORNECEDOR, TP.NM_TIPO FROM PRODUTOS AS PRD\n" +
"        JOIN FORNECEDORES AS FORN ON FORN.ID = PRD.ID_FORNECEDOR JOIN TIPO_PRODUTO AS TP\n" +
"        ON TP.ID = PRD.ID_TIPO WHERE PRD.DS_STATUS='A';");
        
       
    }

    String usuario = "";
    public void passaDados(String user)
    {
        usuario = user;
    }
    
    //Variável que vai armazenar o ID do fornecedor
    int idFornecedor[] = new int[2000];
    
    //Variável que vai armazenar o ID do tipo
    int idTipoProduto[] = new int[2000];
    
    MetodosPadrao metodo = new MetodosPadrao();
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javaSoundAudioDeviceFactory1 = new javazoom.jl.player.JavaSoundAudioDeviceFactory();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldCodigoBarras = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldProdutos = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldQuantidade = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldPrecoCompra = new javax.swing.JTextField();
        jTextFieldPrecoVenda = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jComboBoxFornecedor = new javax.swing.JComboBox<>();
        jButtonCadastrar = new javax.swing.JButton();
        jButtonEditar = new javax.swing.JButton();
        jButtonInativar = new javax.swing.JButton();
        jTextFieldPesquisar = new javax.swing.JTextField();
        jButtonPesquisar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableProdutos = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jComboBoxTipoProduto = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        jComboBoxStatus = new javax.swing.JComboBox<>();

        setClosable(true);
        setMaximizable(true);
        setTitle("Cadastrar Produtos");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Coringa.png"))); // NOI18N

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(34, 34, 34));

        jLabel1.setFont(new java.awt.Font("Old English Text MT", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Cadastrar Produtos");

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/iconeCoringa.png"))); // NOI18N
        jLabel8.setToolTipText("");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addGap(42, 42, 42))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel8))
                .addGap(20, 20, 20))
        );

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setText("Código de Barras:");

        jTextFieldCodigoBarras.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTextFieldCodigoBarras.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldCodigoBarrasFocusLost(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setText("Produto:");

        jTextFieldProdutos.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTextFieldProdutos.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldProdutosFocusLost(evt);
            }
        });
        jTextFieldProdutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldProdutosActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setText("Quantidade:");

        jTextFieldQuantidade.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTextFieldQuantidade.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldQuantidadeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldQuantidadeFocusLost(evt);
            }
        });
        jTextFieldQuantidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldQuantidadeActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setText("Preço de Compra:");

        jTextFieldPrecoCompra.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTextFieldPrecoCompra.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldPrecoCompraFocusLost(evt);
            }
        });

        jTextFieldPrecoVenda.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTextFieldPrecoVenda.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldPrecoVendaFocusLost(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setText("Preço de Venda:");

        jLabel7.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel7.setText("Fornecedor:");

        jComboBoxFornecedor.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jComboBoxFornecedor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "*", "A" }));
        jComboBoxFornecedor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jComboBoxFornecedorMouseEntered(evt);
            }
        });
        jComboBoxFornecedor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBoxFornecedorKeyPressed(evt);
            }
        });

        jButtonCadastrar.setBackground(new java.awt.Color(0, 168, 82));
        jButtonCadastrar.setForeground(new java.awt.Color(255, 255, 255));
        jButtonCadastrar.setText("Cadastrar");
        jButtonCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCadastrarActionPerformed(evt);
            }
        });

        jButtonEditar.setBackground(new java.awt.Color(68, 68, 66));
        jButtonEditar.setForeground(new java.awt.Color(255, 255, 255));
        jButtonEditar.setText("Editar");
        jButtonEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditarActionPerformed(evt);
            }
        });

        jButtonInativar.setBackground(new java.awt.Color(156, 32, 36));
        jButtonInativar.setForeground(new java.awt.Color(255, 255, 255));
        jButtonInativar.setText("Inativar");
        jButtonInativar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInativarActionPerformed(evt);
            }
        });

        jTextFieldPesquisar.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTextFieldPesquisar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldPesquisarFocusLost(evt);
            }
        });
        jTextFieldPesquisar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldPesquisarKeyPressed(evt);
            }
        });

        jButtonPesquisar.setBackground(new java.awt.Color(68, 68, 66));
        jButtonPesquisar.setForeground(new java.awt.Color(255, 255, 255));
        jButtonPesquisar.setText("Pesquisar");
        jButtonPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPesquisarActionPerformed(evt);
            }
        });

        jTableProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTableProdutos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableProdutosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableProdutos);

        jLabel9.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel9.setText("Nome do Produto/ Código de  Barras:");

        jLabel10.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel10.setText("Tipo:");

        jComboBoxTipoProduto.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jComboBoxTipoProduto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "*", "A" }));
        jComboBoxTipoProduto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jComboBoxTipoProdutoMouseEntered(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel11.setText("Status:");

        jComboBoxStatus.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jComboBoxStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ATIVO", "INATIVO" }));
        jComboBoxStatus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jComboBoxStatusMouseEntered(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldCodigoBarras))
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextFieldPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 643, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBoxStatus, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonPesquisar))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxTipoProduto, 0, 258, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jButtonCadastrar)
                                        .addGap(26, 26, 26)
                                        .addComponent(jButtonEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(26, 26, 26)
                                        .addComponent(jButtonInativar, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(282, 282, 282))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldPrecoCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldPrecoVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBoxFornecedor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(jLabel11)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(20, 20, 20))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldCodigoBarras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jTextFieldQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(jComboBoxTipoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextFieldPrecoCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jTextFieldPrecoVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jComboBoxFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCadastrar)
                    .addComponent(jButtonEditar)
                    .addComponent(jButtonInativar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxStatus))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 277, Short.MAX_VALUE)
                .addGap(24, 24, 24))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldQuantidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldQuantidadeActionPerformed
      metodo.desfocaCampo(jTextFieldQuantidade);
    }//GEN-LAST:event_jTextFieldQuantidadeActionPerformed

    private void jButtonCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCadastrarActionPerformed
        cadastrar();
    }//GEN-LAST:event_jButtonCadastrarActionPerformed

    private void jTextFieldCodigoBarrasFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldCodigoBarrasFocusLost
       metodo.desfocaCampo(jTextFieldCodigoBarras);
    }//GEN-LAST:event_jTextFieldCodigoBarrasFocusLost

    private void jTextFieldProdutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldProdutosActionPerformed
        
    }//GEN-LAST:event_jTextFieldProdutosActionPerformed

    private void jTextFieldPrecoCompraFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldPrecoCompraFocusLost
         metodo.desfocaCampo(jTextFieldPrecoCompra);
    }//GEN-LAST:event_jTextFieldPrecoCompraFocusLost

    private void jTextFieldProdutosFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldProdutosFocusLost
        metodo.desfocaCampo(jTextFieldProdutos);
    }//GEN-LAST:event_jTextFieldProdutosFocusLost

    private void jTextFieldQuantidadeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldQuantidadeFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldQuantidadeFocusGained

    private void jTextFieldQuantidadeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldQuantidadeFocusLost
       metodo.desfocaCampo(jTextFieldQuantidade);
    }//GEN-LAST:event_jTextFieldQuantidadeFocusLost

    private void jTextFieldPrecoVendaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldPrecoVendaFocusLost
        metodo.desfocaCampo(jTextFieldPrecoVenda);
    }//GEN-LAST:event_jTextFieldPrecoVendaFocusLost

    private void jComboBoxFornecedorMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBoxFornecedorMouseEntered
        metodo.desfocaCombo(jComboBoxFornecedor);
    }//GEN-LAST:event_jComboBoxFornecedorMouseEntered

    private void jTableProdutosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableProdutosMouseClicked

        if(evt.getClickCount()>0)
        {
            jButtonEditar.setEnabled(true);
            jButtonInativar.setEnabled(true);
            jButtonCadastrar.setEnabled(false);
            jTextFieldCodigoBarras.setEditable(false);

            jTextFieldCodigoBarras.setText(jTableProdutos.getValueAt(jTableProdutos.getSelectedRow(), 0)+"");
            jTextFieldProdutos.setText(jTableProdutos.getValueAt(jTableProdutos.getSelectedRow(), 1)+"");
            jTextFieldQuantidade.setText(jTableProdutos.getValueAt(jTableProdutos.getSelectedRow(), 2)+"");
            jTextFieldPrecoCompra.setText(jTableProdutos.getValueAt(jTableProdutos.getSelectedRow(), 3)+"");
            jTextFieldPrecoVenda.setText(jTableProdutos.getValueAt(jTableProdutos.getSelectedRow(), 4)+"");
            String status = jTableProdutos.getValueAt(jTableProdutos.getSelectedRow(), 7)+"";
            
            
            String fornecedor = jTableProdutos.getValueAt(jTableProdutos.getSelectedRow(), 5)+"";
            
            String tipo = jTableProdutos.getValueAt(jTableProdutos.getSelectedRow(), 6)+"";
            
            int totalIndex = jComboBoxFornecedor.getItemCount();
            int totalIndexTipo = jComboBoxTipoProduto.getItemCount();
            
            
            for(int i=1; i<=totalIndex; i++)
            {
                if(jComboBoxFornecedor.getItemAt(i).toString().equals(fornecedor))
                {
                  jComboBoxFornecedor.setSelectedIndex(i);
                  break;   
                }
                else
                {
                    jComboBoxFornecedor.setSelectedIndex(0);
                }
            }
            
            
             for(int i=1; i<=totalIndexTipo; i++)
            {
                if(jComboBoxTipoProduto.getItemAt(i).toString().equals(tipo))
                {
                  jComboBoxTipoProduto.setSelectedIndex(i);
                  break;   
                }
                else
                {
                    jComboBoxTipoProduto.setSelectedIndex(0);
                }
            }
            
            

     
            
            

            if(status.equals("A"))
            {
                jButtonInativar.setText("INATIVAR");
                jButtonInativar.setText("INATIVAR");
                jButtonInativar.setBackground(new java.awt.Color(156,32,36));
            }
            else
            {
                 jButtonInativar.setText("ATIVAR");
                 jButtonInativar.setBackground(new java.awt.Color(0,168,82));
            }
        }
        
    }//GEN-LAST:event_jTableProdutosMouseClicked

    private void jButtonEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditarActionPerformed
    editar();
    }//GEN-LAST:event_jButtonEditarActionPerformed

    private void jButtonInativarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInativarActionPerformed
        String texto = jButtonInativar.getText();
        String ds_status="";

        if(texto.equals("ATIVAR"))
        {
            ds_status = "A";
        }
        else
        {
            ds_status = "I";
        }

        if(!jTextFieldCodigoBarras.getText().isEmpty())
        {
            String nome = jTableProdutos.getValueAt(jTableProdutos.getSelectedRow(), 1)+"";

            ModeloProduto modeloProduto = new ModeloProduto();
            modeloProduto.setCd_barras(jTextFieldCodigoBarras.getText());
            modeloProduto.setStatus(ds_status);
            ControleProduto controleProduto = new ControleProduto();
            controleProduto.ativaInativaProduto(nome, modeloProduto,texto);
            
            preencherTabela("SELECT PRD.CD_BARRAS, PRD.DS_STATUS, PRD.NM_PRODUTO, PRD.DS_QUANTIDADE,\n" +
            "PRD.VL_COMPRA, PRD.VL_VENDA, FORN.NM_FORNECEDOR, TP.NM_TIPO FROM PRODUTOS AS PRD\n" +
            "JOIN FORNECEDORES AS FORN ON FORN.ID = PRD.ID_FORNECEDOR JOIN TIPO_PRODUTO AS TP\n" +
            "ON TP.ID = PRD.ID_TIPO");

            limpaCampos();
        }
        
    }//GEN-LAST:event_jButtonInativarActionPerformed

    private void jButtonPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPesquisarActionPerformed
     pesquisar();
    }//GEN-LAST:event_jButtonPesquisarActionPerformed

    private void jTextFieldPesquisarFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldPesquisarFocusLost
        metodo.desfocaCampo(jTextFieldPesquisar);
    }//GEN-LAST:event_jTextFieldPesquisarFocusLost

    private void jComboBoxTipoProdutoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBoxTipoProdutoMouseEntered
        metodo.desfocaCombo(jComboBoxTipoProduto);
    }//GEN-LAST:event_jComboBoxTipoProdutoMouseEntered

    private void jComboBoxFornecedorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBoxFornecedorKeyPressed
       if(evt.getKeyCode() == KeyEvent.VK_ENTER && jButtonCadastrar.isEnabled()==true)
       {
           cadastrar();
       }
       else if(evt.getKeyCode() == KeyEvent.VK_ENTER && jButtonCadastrar.isEnabled()==false)
       {
           editar();
       }
    }//GEN-LAST:event_jComboBoxFornecedorKeyPressed

    private void jTextFieldPesquisarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPesquisarKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            pesquisar();
        }
    }//GEN-LAST:event_jTextFieldPesquisarKeyPressed

    private void jComboBoxStatusMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBoxStatusMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxStatusMouseEntered

    void pesquisar()
    {
        
        int i = jComboBoxStatus.getSelectedIndex();
        
        String status = "A";
        
        if(i==1)
        {
            status="I";
        }
        
        String dado = "";
        
        if(jTextFieldPesquisar.getText().isEmpty())
        {
            dado ="null";
        }
        else
        {
            dado = "'%"+jTextFieldPesquisar.getText()+"%'";
        }
        
            
        preencherTabela(
        "SELECT PRD.CD_BARRAS, PRD.DS_STATUS, PRD.NM_PRODUTO, PRD.DS_QUANTIDADE,+\n" +
        "PRD.VL_COMPRA, PRD.VL_VENDA, FORN.NM_FORNECEDOR, TP.NM_TIPO FROM PRODUTOS AS PRD\n" +
        "JOIN FORNECEDORES AS FORN ON FORN.ID = PRD.ID_FORNECEDOR JOIN TIPO_PRODUTO AS TP\n" +
        "ON TP.ID = PRD.ID_TIPO  WHERE \n" +
        "("+dado+" IS NULL OR (CD_BARRAS LIKE "+dado+" OR NM_PRODUTO LIKE "+dado+")) AND PRD.DS_STATUS='"+status+"';");
     
    }
    void editar()
    {
        if(validaCampos() !=false)
        {
          //Pegando o index para saber qual posição do vetor pegar
          int index = jComboBoxFornecedor.getSelectedIndex();

          index--;



          String precoCompra = jTextFieldPrecoCompra.getText();
          String precoVenda = jTextFieldPrecoVenda.getText();

          precoCompra = metodo.replace(precoCompra);

          precoVenda = metodo.replace(precoVenda);

          ModeloProduto modeloProduto = new ModeloProduto();
          modeloProduto.setCd_barras(jTextFieldCodigoBarras.getText());
          modeloProduto.setDs_quantidade(jTextFieldQuantidade.getText());

          int indexTipo = jComboBoxTipoProduto.getSelectedIndex();
          
          //PRODUTO INICIA EM 0 E O COMBO TEM OPÇÃO SELECIONAR
          indexTipo--;
          
          modeloProduto.setId_fornecedor(idFornecedor[index]);
          modeloProduto.setNm_produto(jTextFieldProdutos.getText());
          modeloProduto.setVl_compra(Float.parseFloat(precoCompra));
          modeloProduto.setVl_venda(Float.parseFloat(precoVenda));
          modeloProduto.setId_usuario(Integer.parseInt(usuario));
          modeloProduto.setId_tipo(idTipoProduto[indexTipo]);
          String nome = jTableProdutos.getValueAt(jTableProdutos.getSelectedRow(), 1)+"";

          ControleProduto controleProduto = new ControleProduto();
          controleProduto.editaProduto(modeloProduto,nome);

          preencherTabela("SELECT PRD.CD_BARRAS, PRD.DS_STATUS, PRD.NM_PRODUTO, PRD.DS_QUANTIDADE,\n" +
          "PRD.VL_COMPRA, PRD.VL_VENDA, FORN.NM_FORNECEDOR, TP.NM_TIPO FROM PRODUTOS AS PRD\n" +
          "JOIN FORNECEDORES AS FORN ON FORN.ID = PRD.ID_FORNECEDOR JOIN TIPO_PRODUTO AS TP\n" +
          "ON TP.ID = PRD.ID_TIPO");

          limpaCampos();
        }
    }
    
    void cadastrar()
    {
        if(validaCampos() !=false)
      {
        //Pegando o index para saber qual posição do vetor pegar
        int index = jComboBoxFornecedor.getSelectedIndex();
        int indexTipo = jComboBoxTipoProduto.getSelectedIndex();
        
        //decrementando 1 por conta to item selecione
        index--;
        indexTipo--;
        

        String precoCompra = jTextFieldPrecoCompra.getText();
        String precoVenda = jTextFieldPrecoVenda.getText();

        precoCompra = metodo.replace(precoCompra);

        precoVenda = metodo.replace(precoVenda);

        ModeloProduto modeloProduto = new ModeloProduto();
        modeloProduto.setCd_barras(jTextFieldCodigoBarras.getText());
        modeloProduto.setDs_quantidade(jTextFieldQuantidade.getText());

        modeloProduto.setId_fornecedor(idFornecedor[index]);
        modeloProduto.setId_tipo(idTipoProduto[indexTipo]);
        modeloProduto.setNm_produto(jTextFieldProdutos.getText());
        modeloProduto.setVl_compra(Float.parseFloat(precoCompra));
        modeloProduto.setVl_venda(Float.parseFloat(precoVenda));
        modeloProduto.setId_usuario(Integer.parseInt(usuario));
        modeloProduto.setStatus("A");
        ControleProduto controleProduto = new ControleProduto();
        controleProduto.gravarProduto(modeloProduto);
       
        preencherTabela("SELECT PRD.CD_BARRAS, PRD.NM_PRODUTO, PRD.DS_STATUS, PRD.DS_QUANTIDADE,\n" +
        "PRD.VL_COMPRA, PRD.VL_VENDA, FORN.NM_FORNECEDOR, TP.NM_TIPO FROM PRODUTOS AS PRD\n" +
        "JOIN FORNECEDORES AS FORN ON FORN.ID = PRD.ID_FORNECEDOR JOIN TIPO_PRODUTO AS TP\n" +
        "ON TP.ID = PRD.ID_TIPO");
          
        limpaCampos();
      }
        
    }
    boolean validaCampos()
    {
        if(jTextFieldCodigoBarras.getText().isEmpty() || jTextFieldPrecoCompra.getText().isEmpty() ||
           jTextFieldPrecoVenda.getText().isEmpty() || jTextFieldProdutos.getText().isEmpty() || 
           jTextFieldQuantidade.getText().isEmpty() || jComboBoxFornecedor.getSelectedIndex()==0 
           || jComboBoxTipoProduto.getSelectedIndex()==0 )
        {
            metodo.validaCombo(jComboBoxFornecedor, "Fornecedor");
            metodo.validaCombo(jComboBoxTipoProduto,"Tipo");
            metodo.validaCampo(jTextFieldPrecoVenda, "Preço de Venda");
            metodo.validaCampo(jTextFieldPrecoCompra, "Preço de Compra");
            metodo.validaCampo(jTextFieldQuantidade, "Quantidade");
            metodo.validaCampo(jTextFieldProdutos, "Produtos");
            metodo.validaCampo(jTextFieldCodigoBarras, "Código de Barras");
            return false;
        }
        else
        {
            return true;
        }
    }
    
    void populaComboFornecedores()
    {
        MetodosPadrao metodo = new MetodosPadrao();
        jComboBoxFornecedor.removeAllItems();
        jComboBoxFornecedor.addItem("Selecione");
        Conecta_Banco conecta = new Conecta_Banco();
        try 
        {
            conecta.conexao();
            conecta.executaSQL("SELECT ID, NM_FORNECEDOR FROM FORNECEDORES WHERE DS_STATUS='A' ORDER BY NM_FORNECEDOR;");
            int i=0;
            while(conecta.rs.next())                    
            {
                jComboBoxFornecedor.addItem(conecta.rs.getString("NM_FORNECEDOR").toUpperCase());
                idFornecedor[i] = conecta.rs.getInt("ID");
                i++;
            }

        } 
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Erro ao pesquisar fornecedores: "+ ex,"Erro:",JOptionPane.WARNING_MESSAGE);
        }
         finally
        {
            conecta.desconecta();
        }
    }
    
    void populaComboTipoProduto()
    {
        MetodosPadrao metodo = new MetodosPadrao();
        jComboBoxTipoProduto.removeAllItems();
        jComboBoxTipoProduto.addItem("Selecione");
         Conecta_Banco conecta = new Conecta_Banco();
        try 
        {
           
            conecta.conexao();
            conecta.executaSQL("SELECT ID, NM_TIPO FROM TIPO_PRODUTO WHERE DS_STATUS='A' ORDER BY NM_TIPO;");
            int i=0;
            while(conecta.rs.next())                    
            {
                jComboBoxTipoProduto.addItem(conecta.rs.getString("NM_TIPO").toUpperCase());
                idTipoProduto[i] = conecta.rs.getInt("ID");
                i++;
            }
        } 
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Erro ao pesquisar fornecedores: "+ ex,"Erro:",JOptionPane.WARNING_MESSAGE);
        }
        finally
        {
            conecta.desconecta();
        }
    }
    
    void limpaCampos()
    {
        populaComboFornecedores();
        jTextFieldCodigoBarras.setText("");
        jTextFieldPrecoCompra.setText("");
        jTextFieldPrecoVenda.setText("");
        jTextFieldProdutos.setText("");
        jTextFieldQuantidade.setText("");
        jTextFieldPesquisar.setText("");
        jButtonEditar.setEnabled(false);
        jButtonInativar.setEnabled(false);
        jButtonCadastrar.setEnabled(true);
        jTextFieldCodigoBarras.setEditable(true);
        jComboBoxFornecedor.setSelectedIndex(0);
        jComboBoxTipoProduto.setSelectedIndex(0);
        jTextFieldCodigoBarras.requestFocus();
    }
    
    public void preencherTabela(String SQL) 
     {

         //System.out.println(SQL);
        //MUDANDO A FONTE DO CABEÇALHO
        JTableHeader cabecalho = jTableProdutos.getTableHeader();
        cabecalho.setFont(new java.awt.Font("Arial", 1, 12));

        
        
    
        
        ArrayList dados = new ArrayList();

        Conecta_Banco conecta = new Conecta_Banco();
        conecta.conexao();

        String[] colunas = new String[]{"COD BARRAS","NOME PRODUTO","QUANTIDADE MÍNIMA","VALOR DE COMPRA","VALOR DE VENDA",
        "FORNECEDOR","TIPO PRODUTO","STATUS"};

        conecta.executaSQL(SQL);
        
        
        try {
            conecta.rs.first();
            do {
                
               String valorCompra = metodo.formataFloats(conecta.rs.getFloat("VL_COMPRA"));
               String valorVenda = metodo.formataFloats(conecta.rs.getFloat("VL_VENDA"));
               
               dados.add(new Object[]{conecta.rs.getString("CD_BARRAS"),
               conecta.rs.getString("NM_PRODUTO").toUpperCase(),conecta.rs.getString("DS_QUANTIDADE"),
               valorCompra,valorVenda,conecta.rs.getString("NM_FORNECEDOR").toUpperCase(),
               conecta.rs.getString("NM_TIPO").toUpperCase(),conecta.rs.getString("DS_STATUS")});

            } while (conecta.rs.next());
        } catch (SQLException ex) {
           
            JOptionPane.showMessageDialog(null,"Nenhum dado Encontrado!");
            System.out.println(ex);
             
        }
        
        jTableProdutos.getTableHeader().setReorderingAllowed(false);
        jTableProdutos.setAutoResizeMode(jTableProdutos.AUTO_RESIZE_OFF);
        jTableProdutos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        
        JTableHeader header =  jTableProdutos.getTableHeader();
        DefaultTableCellRenderer centralizado = (DefaultTableCellRenderer) header.getDefaultRenderer();
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);

        Conecta_Tabela ct = new Conecta_Tabela(dados, colunas);
        jTableProdutos.setModel(ct);

        

        jTableProdutos.getColumnModel().getColumn(0).setPreferredWidth(200);
        jTableProdutos.getColumnModel().getColumn(0).setResizable(true);
        
        jTableProdutos.getColumnModel().getColumn(1).setPreferredWidth(300);
        jTableProdutos.getColumnModel().getColumn(1).setResizable(true);
        
        jTableProdutos.getColumnModel().getColumn(2).setPreferredWidth(200);
        jTableProdutos.getColumnModel().getColumn(2).setResizable(true);
        
        jTableProdutos.getColumnModel().getColumn(3).setPreferredWidth(200);
        jTableProdutos.getColumnModel().getColumn(3).setResizable(true);
        
        jTableProdutos.getColumnModel().getColumn(4).setPreferredWidth(200);
        jTableProdutos.getColumnModel().getColumn(4).setResizable(true);
        
        jTableProdutos.getColumnModel().getColumn(5).setPreferredWidth(200);
        jTableProdutos.getColumnModel().getColumn(5).setResizable(true);
        
        jTableProdutos.getColumnModel().getColumn(6).setPreferredWidth(200);
        jTableProdutos.getColumnModel().getColumn(6).setResizable(true);
        
        jTableProdutos.getColumnModel().getColumn(7).setPreferredWidth(200);
        jTableProdutos.getColumnModel().getColumn(7).setResizable(true);
       
        //Ocultando a Coluna STATUS
        jTableProdutos.getColumnModel().getColumn(7).setMinWidth(0);
        jTableProdutos.getColumnModel().getColumn(7).setMaxWidth(0);
       
        jTableProdutos.getTableHeader().setReorderingAllowed(false);
        jTableProdutos.setAutoResizeMode(jTableProdutos.AUTO_RESIZE_OFF);
        jTableProdutos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
      
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCadastrar;
    private javax.swing.JButton jButtonEditar;
    private javax.swing.JButton jButtonInativar;
    private javax.swing.JButton jButtonPesquisar;
    private javax.swing.JComboBox<String> jComboBoxFornecedor;
    private javax.swing.JComboBox<String> jComboBoxStatus;
    private javax.swing.JComboBox<String> jComboBoxTipoProduto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableProdutos;
    private javax.swing.JTextField jTextFieldCodigoBarras;
    private javax.swing.JTextField jTextFieldPesquisar;
    private javax.swing.JTextField jTextFieldPrecoCompra;
    private javax.swing.JTextField jTextFieldPrecoVenda;
    private javax.swing.JTextField jTextFieldProdutos;
    private javax.swing.JTextField jTextFieldQuantidade;
    private javazoom.jl.player.JavaSoundAudioDeviceFactory javaSoundAudioDeviceFactory1;
    // End of variables declaration//GEN-END:variables
}
