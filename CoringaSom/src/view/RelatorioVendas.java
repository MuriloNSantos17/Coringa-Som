/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import control.MetodosPadrao;
import dao.Conecta_Banco;
import dao.Conecta_Tabela;
import static java.awt.Frame.MAXIMIZED_BOTH;
import java.beans.PropertyVetoException;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.JTableHeader;
import relatorios.RelatorioVendasExcel;

/**
 *
 * @author Murilo Santos
 */
public class RelatorioVendas extends javax.swing.JInternalFrame {

    /**
     * Creates new form RelatorioVendas
     */
    public RelatorioVendas() {
        
        initComponents();
        
        populaComboUsuarios();
        preencherTabela(" SELECT NR_VENDA, PRD.NM_PRODUTO, VD.DS_QUANTIDADE, (VD.TOTAL/VD.DS_QUANTIDADE) \n" +
        "AS VL_UNITARIO, (VD.TOTAL-VD.VL_DESCONTO) as TOTAL, VD.VL_DESCONTO, \n" +
        "US.NM_USUARIO, AP.NM_USUARIO AS NM_USUARIO_APROVADOR, DS_STATUS_VENDA, \n" +
        "DATE_FORMAT(VD.DT_VENDA,\"%d/%m/%Y\") AS DT_VENDA\n" +
        "FROM VENDAS AS VD JOIN PRODUTOS AS \n" +
        "PRD ON PRD.ID=VD.ID_PRODUTO JOIN USUARIOS AS US ON US.ID = VD.ID_USUARIO_VENDA JOIN USUARIOS \n" +
        "AS AP ON AP.ID = VD.ID_USUARIO_APROVADOR \n" +
        "WHERE DS_STATUS_VENDA='A' OR DS_STATUS_VENDA='D' ORDER BY NR_VENDA");
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldCodigoBarras = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableVendas = new javax.swing.JTable();
        jComboBoxUsuarios = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jComboBoxSituacaoVenda = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        jFormattedTextField2 = new javax.swing.JFormattedTextField();
        jLabel13 = new javax.swing.JLabel();
        jButtonPesquisar = new javax.swing.JButton();
        jButtonConfirmarEntrada = new javax.swing.JButton();
        jTextFieldTotal = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        setClosable(true);
        setMaximizable(true);
        setTitle("Relatório de Vendas");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Coringa.png"))); // NOI18N

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(34, 34, 34));

        jLabel1.setFont(new java.awt.Font("Old English Text MT", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Relatório de Vendas");

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/iconeCoringa.png"))); // NOI18N
        jLabel8.setToolTipText("");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 728, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addGap(42, 42, 42))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel8))
                .addGap(20, 20, 20))
        );

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setText("Código ou Nome do produto:");

        jTextFieldCodigoBarras.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jTableVendas.setAutoCreateRowSorter(true);
        jTableVendas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTableVendas);

        jComboBoxUsuarios.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jComboBoxUsuarios.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "*", "A" }));
        jComboBoxUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jComboBoxUsuariosMouseEntered(evt);
            }
        });
        jComboBoxUsuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxUsuariosActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel10.setText("Usuário:");

        jComboBoxSituacaoVenda.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jComboBoxSituacaoVenda.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "*", "APROVADA", "PENDENTE", "DIRETA", "CANCELADA" }));
        jComboBoxSituacaoVenda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jComboBoxSituacaoVendaMouseEntered(evt);
            }
        });
        jComboBoxSituacaoVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxSituacaoVendaActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel11.setText("Situação da Venda:");

        jLabel12.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel12.setText("Período inicial:");

        try {
            jFormattedTextField1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFormattedTextField1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        try {
            jFormattedTextField2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFormattedTextField2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jLabel13.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel13.setText("Período Final:");

        jButtonPesquisar.setBackground(new java.awt.Color(68, 68, 66));
        jButtonPesquisar.setForeground(new java.awt.Color(255, 255, 255));
        jButtonPesquisar.setText("Pesquisar");
        jButtonPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPesquisarActionPerformed(evt);
            }
        });

        jButtonConfirmarEntrada.setBackground(new java.awt.Color(0, 168, 82));
        jButtonConfirmarEntrada.setForeground(new java.awt.Color(255, 255, 255));
        jButtonConfirmarEntrada.setText("Relatório Excel");
        jButtonConfirmarEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConfirmarEntradaActionPerformed(evt);
            }
        });

        jTextFieldTotal.setEditable(false);
        jTextFieldTotal.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setText("Total:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxSituacaoVenda, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jFormattedTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldCodigoBarras)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBoxUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButtonConfirmarEntrada)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldCodigoBarras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(jComboBoxUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jComboBoxSituacaoVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(jFormattedTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonPesquisar))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 281, Short.MAX_VALUE)
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(jTextFieldTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButtonConfirmarEntrada))
                .addGap(31, 31, 31))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxUsuariosMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBoxUsuariosMouseEntered

    }//GEN-LAST:event_jComboBoxUsuariosMouseEntered

    private void jComboBoxUsuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxUsuariosActionPerformed

    
    }//GEN-LAST:event_jComboBoxUsuariosActionPerformed

    private void jComboBoxSituacaoVendaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBoxSituacaoVendaMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxSituacaoVendaMouseEntered

    private void jComboBoxSituacaoVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxSituacaoVendaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxSituacaoVendaActionPerformed

    private void jButtonPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPesquisarActionPerformed
       
        int indexUsuario=jComboBoxUsuarios.getSelectedIndex();
        int indexSituacaoVenda=jComboBoxSituacaoVenda.getSelectedIndex();
        int codigo = jTextFieldCodigoBarras.getText().trim().length();
        int dataInicial = jFormattedTextField1.getText().trim().length();
        int dataFinal = jFormattedTextField2.getText().trim().length();
        
        String sql = "";
        
        String nomeProduto ="";
        String idUsuario="";
        String dtInicial ="";
        String dtFinal="";
        String situacao="";
        String cd_barras="";
        
        MetodosPadrao metodos = new MetodosPadrao();
        
        if(indexUsuario==0 && indexSituacaoVenda==0 && codigo==0 && 
        dataInicial<10 && dataFinal <10 &&jTextFieldCodigoBarras.getText().isEmpty())
        {
             sql = "SELECT NR_VENDA, PRD.NM_PRODUTO, VD.DS_QUANTIDADE, (VD.TOTAL/VD.DS_QUANTIDADE) AS VL_UNITARIO, (VD.TOTAL-VD.VL_DESCONTO) \n" +
             "as TOTAL, VD.VL_DESCONTO, \n" +
             "US.NM_USUARIO, AP.NM_USUARIO AS NM_USUARIO_APROVADOR, DS_STATUS_VENDA, DATE_FORMAT(VD.DT_VENDA,\"%d/%m/%Y\") as DT_VENDA \n" +
             "FROM VENDAS AS VD JOIN PRODUTOS AS \n" +
             "PRD ON PRD.ID=VD.ID_PRODUTO JOIN USUARIOS AS US ON US.ID = VD.ID_USUARIO_VENDA JOIN USUARIOS AS AP ON AP.ID = VD.ID_USUARIO_APROVADOR  ORDER BY NR_VENDA";
        }
        else
        {

            if(indexUsuario!=0)
            {
                indexUsuario--;
                idUsuario = id_usuario[indexUsuario]+"";
            }
            else
            {
                idUsuario ="null";
            }
            
            if(indexSituacaoVenda!=0)
            {
                if(indexSituacaoVenda ==1)
                {
                    situacao="'A'";
                }
                else if(indexSituacaoVenda ==2)
                {
                    situacao="'P'";
                }
                else if(indexSituacaoVenda ==3)
                {
                    situacao="'D'";
                }
                else
                {
                    situacao="'C'";
                }
            }
            else
            {
                situacao="null";
            }
            
            if(dataInicial==10)
            {
                dtInicial =  "'"+metodos.convertDataAmericana(jFormattedTextField1.getText())+" 00:00:00'";
            }
            else
            {
                dtInicial="null";
            }
            
            if(dataFinal==10)
            {
                dtFinal = "'"+metodos.convertDataAmericana(jFormattedTextField2.getText())+" 23:59:59'";
            }
            else
            {
                dtFinal="null";
            }
            
            if(jTextFieldCodigoBarras.getText().isEmpty())
            {
                cd_barras="null";
            }
            else
            {
                cd_barras = jTextFieldCodigoBarras.getText();
                try 
                {
                    //System.out.println(cd_barras.substring(0,1));

                    int teste = Integer.parseInt(cd_barras.substring(0,1));
                    nomeProduto ="null";

                } catch (Exception e) {
                    nomeProduto=jTextFieldCodigoBarras.getText();
                    cd_barras ="null";
                }
            }
            
            
            sql = "SELECT NR_VENDA, PRD.NM_PRODUTO, VD.DS_QUANTIDADE, (VD.TOTAL/VD.DS_QUANTIDADE) AS VL_UNITARIO, (VD.TOTAL-VD.VL_DESCONTO) \n" +
            "as TOTAL, VD.VL_DESCONTO, \n" +
            "US.NM_USUARIO, AP.NM_USUARIO AS NM_USUARIO_APROVADOR, DS_STATUS_VENDA, DATE_FORMAT(VD.DT_VENDA,\"%d/%m/%Y\") as DT_VENDA \n" +
            "FROM VENDAS AS VD JOIN PRODUTOS AS \n" +
            "PRD ON PRD.ID=VD.ID_PRODUTO JOIN USUARIOS AS US ON US.ID = VD.ID_USUARIO_VENDA JOIN USUARIOS AS AP ON AP.ID = VD.ID_USUARIO_APROVADOR\n" +
            " WHERE ("+idUsuario+" IS NULL  OR US.ID="+idUsuario+")  AND ("+dtInicial+" IS NULL  OR VD.DT_VENDA >= "+dtInicial+
            ") AND ("+dtFinal+" IS NULL  OR VD.DT_VENDA <= "+dtFinal+") AND ("+situacao+" IS NULL  OR DS_STATUS_VENDA="+situacao+") AND"
            + "("+cd_barras+" IS NULL  OR PRD.CD_BARRAS="+cd_barras+") AND (PRD.NM_PRODUTO LIKE '%"+nomeProduto+"%' OR PRD.CD_BARRAS="+cd_barras+")  ORDER BY NR_VENDA";
            
        }
        
        preencherTabela(sql);
        
        
    }//GEN-LAST:event_jButtonPesquisarActionPerformed

    private void jButtonConfirmarEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConfirmarEntradaActionPerformed
      
        int indexUsuario=jComboBoxUsuarios.getSelectedIndex();
        int indexSituacaoVenda=jComboBoxSituacaoVenda.getSelectedIndex();
        int codigo = jTextFieldCodigoBarras.getText().trim().length();
        int dataInicial = jFormattedTextField1.getText().trim().length();
        int dataFinal = jFormattedTextField2.getText().trim().length();
        
        String sql = "";
        
        String nomeProduto ="";
        String idUsuario="";
        String dtInicial ="";
        String dtFinal="";
        String situacao="";
        String cd_barras="";
        
        MetodosPadrao metodos = new MetodosPadrao();
        
        if(indexUsuario==0 && indexSituacaoVenda==0 && codigo==0 && 
        dataInicial<10 && dataFinal <10 &&jTextFieldCodigoBarras.getText().isEmpty())
        {
              sql = "SELECT NR_VENDA, PRD.NM_PRODUTO, VD.DS_QUANTIDADE, (VD.TOTAL/VD.DS_QUANTIDADE) AS VL_UNITARIO, (VD.TOTAL-VD.VL_DESCONTO) \n" +
             "as TOTAL, VD.VL_DESCONTO, \n" +
             "US.NM_USUARIO, AP.NM_USUARIO AS NM_USUARIO_APROVADOR, DS_STATUS_VENDA, DATE_FORMAT(VD.DT_VENDA,\"%d/%m/%Y\") as DT_VENDA \n" +
             "FROM VENDAS AS VD JOIN PRODUTOS AS \n" +
             "PRD ON PRD.ID=VD.ID_PRODUTO JOIN USUARIOS AS US ON US.ID = VD.ID_USUARIO_VENDA JOIN USUARIOS AS AP ON AP.ID = VD.ID_USUARIO_APROVADOR  ORDER BY NR_VENDA";
        }
        else
        {

            if(indexUsuario!=0)
            {
                indexUsuario--;
                idUsuario = id_usuario[indexUsuario]+"";
            }
            else
            {
                idUsuario ="null";
            }
            
            if(indexSituacaoVenda!=0)
            {
                if(indexSituacaoVenda ==1)
                {
                    situacao="'A'";
                }
                else if(indexSituacaoVenda ==2)
                {
                    situacao="'P'";
                }
                else if(indexSituacaoVenda ==3)
                {
                    situacao="'D'";
                }
                else
                {
                    situacao="'C'";
                }
            }
            else
            {
                situacao="null";
            }
            
            if(dataInicial==10)
            {
                dtInicial =  "'"+metodos.convertDataAmericana(jFormattedTextField1.getText())+" 00:00:00'";
            }
            else
            {
                dtInicial="null";
            }
            
            if(dataFinal==10)
            {
                dtFinal = "'"+metodos.convertDataAmericana(jFormattedTextField2.getText())+" 23:59:59'";
            }
            else
            {
                dtFinal="null";
            }
            
            if(jTextFieldCodigoBarras.getText().isEmpty())
            {
                cd_barras="null";
            }
            else
            {
                cd_barras = jTextFieldCodigoBarras.getText();
                try 
                {
                    System.out.println(cd_barras.substring(0,1));

                    int teste = Integer.parseInt(cd_barras.substring(0,1));
                    nomeProduto ="null";

                } catch (Exception e) {
                    nomeProduto=jTextFieldCodigoBarras.getText();
                    cd_barras ="null";
                }
            }
            
            
            sql = "SELECT NR_VENDA, PRD.NM_PRODUTO, VD.DS_QUANTIDADE, (VD.TOTAL/VD.DS_QUANTIDADE) AS VL_UNITARIO, (VD.TOTAL-VD.VL_DESCONTO) \n" +
            "as TOTAL, VD.VL_DESCONTO, \n" +
            "US.NM_USUARIO, AP.NM_USUARIO AS NM_USUARIO_APROVADOR, DS_STATUS_VENDA, DATE_FORMAT(VD.DT_VENDA,\"%d/%m/%Y\") as DT_VENDA \n" +
            "FROM VENDAS AS VD JOIN PRODUTOS AS \n" +
            "PRD ON PRD.ID=VD.ID_PRODUTO JOIN USUARIOS AS US ON US.ID = VD.ID_USUARIO_VENDA JOIN USUARIOS AS AP ON AP.ID = VD.ID_USUARIO_APROVADOR\n" +
            " WHERE ("+idUsuario+" IS NULL  OR US.ID="+idUsuario+")  AND ("+dtInicial+" IS NULL  OR VD.DT_VENDA >= "+dtInicial+
            ") AND ("+dtFinal+" IS NULL  OR VD.DT_VENDA <= "+dtFinal+") AND ("+situacao+" IS NULL  OR DS_STATUS_VENDA="+situacao+") AND"
            + "("+cd_barras+" IS NULL  OR PRD.CD_BARRAS="+cd_barras+") AND (PRD.NM_PRODUTO LIKE '%"+nomeProduto+"%' OR PRD.CD_BARRAS="+cd_barras+")  ORDER BY NR_VENDA";
            
        }
        
        try 
        {
            RelatorioVendasExcel relatorio = new RelatorioVendasExcel();
            relatorio.gerarRelatorioEstoque(sql);
        } 
        catch (Exception e) 
        {
            JOptionPane.showMessageDialog(null,"ERRO AO GERAR RELATÒRIO: "+e);
        }
        
    }//GEN-LAST:event_jButtonConfirmarEntradaActionPerformed

    
    int id_usuario[] = new int[1000];
    
    void populaComboUsuarios()
    {
        MetodosPadrao metodo = new MetodosPadrao();
        jComboBoxUsuarios.removeAllItems();
        jComboBoxUsuarios.addItem("Selecione");
         Conecta_Banco conecta = new Conecta_Banco();
        try 
        {
           
            conecta.conexao();
            conecta.executaSQL("SELECT ID, NM_USUARIO FROM USUARIOS WHERE DS_STATUS='A' ORDER BY NM_USUARIO;");
            int i=0;
            
            while(conecta.rs.next())                    
            {
                jComboBoxUsuarios.addItem(conecta.rs.getString("NM_USUARIO"));
                id_usuario[i] = conecta.rs.getInt("ID");
                i++;
            }
        } 
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Erro ao pesquisar Usuários: "+ ex,"Erro:",JOptionPane.WARNING_MESSAGE);
        }
        finally
        {
            conecta.desconecta();
        }
    }

    public void preencherTabela(String SQL) 
    {
         
        System.out.println("SQL: "+SQL);
        //MUDANDO A FONTE DO CABEÇALHO
        JTableHeader cabecalho = jTableVendas.getTableHeader();
        cabecalho.setFont(new java.awt.Font("Arial", 1, 12));

        ArrayList dados = new ArrayList();

        Conecta_Banco conecta = new Conecta_Banco();
        conecta.conexao();

        String[] colunas = new String[]{"NÚMERO DA VENDA","NOME PRODUTO","QUANTIDADE","VALOR UNITÁRIO","VALOR DESCONTO",
        "TOTAL","VENDEDOR","APROVADOR","STATUS DA VENDA","DATA DA VENDA"};

        conecta.executaSQL(SQL);
        MetodosPadrao metodos = new MetodosPadrao();
        float total = 0;
        try {
            conecta.rs.first();
            do {
               String statusAprovacao = conecta.rs.getString("DS_STATUS_VENDA");
               
               if(statusAprovacao.equals("A"))
               {
                   statusAprovacao = "APROVADA";
               }
               else if(statusAprovacao.equals("D"))
               {
                   statusAprovacao="DIRETA";
               }
               else if(statusAprovacao.equals("C"))
               {
                   statusAprovacao="CANCELADA";
               }
               else
               {
                   statusAprovacao = "PENDENTE";
               }
               
               
               String valorTotal = metodos.formataFloats(conecta.rs.getFloat("TOTAL"));
               String valorUnitario = metodos.formataFloats(conecta.rs.getFloat("VL_UNITARIO"));
               String valorDesconto = metodos.formataFloats(conecta.rs.getFloat("VL_DESCONTO"));
               
               dados.add(new Object[]{conecta.rs.getString("NR_VENDA"),
               conecta.rs.getString("NM_PRODUTO").toUpperCase(),conecta.rs.getString("DS_QUANTIDADE"),
                valorUnitario,valorDesconto,valorTotal,
               conecta.rs.getString("NM_USUARIO").toUpperCase(),conecta.rs.getString("NM_USUARIO_APROVADOR").toUpperCase(),
               statusAprovacao,conecta.rs.getString("DT_VENDA")
               });
               total = total + conecta.rs.getFloat("total");
            } while (conecta.rs.next());
            
            String totalFormat = metodos.formataFloats(total);
            
            jTextFieldTotal.setText(totalFormat+"");
        } catch (SQLException ex) {
           
            JOptionPane.showMessageDialog(null,"Nenhum dado Encontrado!");
            System.out.println(ex);
             
        }
        finally{
            conecta.desconecta();
        }
        
        jTableVendas.getTableHeader().setReorderingAllowed(false);
        jTableVendas.setAutoResizeMode(jTableVendas.AUTO_RESIZE_OFF);
        jTableVendas.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        
        JTableHeader header =  jTableVendas.getTableHeader();
        DefaultTableCellRenderer centralizado = (DefaultTableCellRenderer) header.getDefaultRenderer();
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);

        Conecta_Tabela ct = new Conecta_Tabela(dados, colunas);
        jTableVendas.setModel(ct);

        

        jTableVendas.getColumnModel().getColumn(0).setPreferredWidth(150);
        jTableVendas.getColumnModel().getColumn(0).setResizable(true);
        
        jTableVendas.getColumnModel().getColumn(1).setPreferredWidth(690);
        jTableVendas.getColumnModel().getColumn(1).setResizable(true);
        
        jTableVendas.getColumnModel().getColumn(2).setPreferredWidth(100);
        jTableVendas.getColumnModel().getColumn(2).setResizable(true);
        
        jTableVendas.getColumnModel().getColumn(3).setPreferredWidth(150);
        jTableVendas.getColumnModel().getColumn(3).setResizable(true);
        
        jTableVendas.getColumnModel().getColumn(4).setPreferredWidth(150);
        jTableVendas.getColumnModel().getColumn(4).setResizable(true);
        
        jTableVendas.getColumnModel().getColumn(5).setPreferredWidth(100);
        jTableVendas.getColumnModel().getColumn(5).setResizable(true);
        
        jTableVendas.getColumnModel().getColumn(6).setPreferredWidth(200);
        jTableVendas.getColumnModel().getColumn(6).setResizable(true);
        
        jTableVendas.getColumnModel().getColumn(7).setPreferredWidth(200);
        jTableVendas.getColumnModel().getColumn(7).setResizable(true);
        
        jTableVendas.getColumnModel().getColumn(8).setPreferredWidth(200);
        jTableVendas.getColumnModel().getColumn(8).setResizable(true);
        
        jTableVendas.getColumnModel().getColumn(9).setPreferredWidth(100);
        jTableVendas.getColumnModel().getColumn(9).setResizable(true);
     
       
        /*Ocultando a Coluna STATUS
        jTableVendas.getColumnModel().getColumn(6).setMinWidth(0);
        jTableVendas.getColumnModel().getColumn(6).setMaxWidth(0);
        
        jTableVendas.getTableHeader().setReorderingAllowed(false);
        jTableVendas.setAutoResizeMode(jTableVendas.AUTO_RESIZE_OFF);
        jTableVendas.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        */
      
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonConfirmarEntrada;
    private javax.swing.JButton jButtonPesquisar;
    private javax.swing.JComboBox<String> jComboBoxSituacaoVenda;
    private javax.swing.JComboBox<String> jComboBoxUsuarios;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JFormattedTextField jFormattedTextField2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableVendas;
    private javax.swing.JTextField jTextFieldCodigoBarras;
    private javax.swing.JTextField jTextFieldTotal;
    // End of variables declaration//GEN-END:variables
}
