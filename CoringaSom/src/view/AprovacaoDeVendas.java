/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import control.ControleProduto;
import control.ControleVendas;
import control.MetodosPadrao;
import dao.Conecta_Banco;
import dao.Conecta_Tabela;
import java.sql.SQLException;
import java.text.NumberFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.JTableHeader;
import model.ModeloProduto;
import model.ModeloVenda;
import relatorios.ImpressaoVenda;

/**
 *
 * @author Murilo Santos
 */
public class AprovacaoDeVendas extends javax.swing.JInternalFrame {

    /**
     * Creates new form AprovacaoDeVendas
     */
    public AprovacaoDeVendas() {
        initComponents();
        preencherTabela("SELECT NR_VENDA, SUM(TOTAL) AS TOTAL, VL_DESCONTO , "
        + "(SUM(TOTAL)-VL_DESCONTO) AS VALOR_FINAL, \n" +
        "USER.NM_USUARIO FROM VENDAS AS VD JOIN USUARIOS AS USER ON USER.ID =\n" +
        "VD.ID_USUARIO_VENDA WHERE DS_STATUS_VENDA='P' GROUP BY NR_VENDA");
        populaComboUsuarios();
        
    }
    
    MetodosPadrao metodos = new MetodosPadrao();
    String usuario="";
    
    TelaPrincipal principal; 
    public void passaDados(String user,TelaPrincipal pr)
    {
        usuario = user;
        principal = pr;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldNumeroVenda = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableVendas = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jTextFieldQuantidadeVenda = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableCarrinho = new javax.swing.JTable();
        jLabel16 = new javax.swing.JLabel();
        jTextFieldQuantidadeValorFinalProduto = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jTextFieldQuantidadeValorTotal = new javax.swing.JTextField();
        jButtonFinalizarCompra = new javax.swing.JButton();
        jButtonAlterar = new javax.swing.JButton();
        jButtonRemover = new javax.swing.JButton();
        jButtonCancelarVenda = new javax.swing.JButton();
        jTextFieldDesconto = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jTextFieldValorFinal = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldFornecedor = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jTextFieldProduto = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jTextFieldTipoProduto = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jTextFieldValorUnitario = new javax.swing.JTextField();
        jComboBoxUsuarios = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jButtonPesquisar = new javax.swing.JButton();

        setClosable(true);
        setMaximizable(true);
        setTitle("Aprovação de Vendas");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Coringa.png"))); // NOI18N

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(34, 34, 34));

        jLabel1.setFont(new java.awt.Font("Old English Text MT", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Aprovação de Venda");

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/iconeCoringa.png"))); // NOI18N
        jLabel8.setToolTipText("");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 738, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addGap(42, 42, 42))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel8))
                .addGap(20, 20, 20))
        );

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setText("Nº da venda:");

        jTextFieldNumeroVenda.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTextFieldNumeroVenda.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldNumeroVendaFocusLost(evt);
            }
        });

        jTableVendas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTableVendas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableVendasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableVendas);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTextFieldQuantidadeVenda.setEditable(false);
        jTextFieldQuantidadeVenda.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTextFieldQuantidadeVenda.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldQuantidadeVendaFocusLost(evt);
            }
        });
        jTextFieldQuantidadeVenda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldQuantidadeVendaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldQuantidadeVendaKeyReleased(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel14.setText("Quantidade Venda:");

        jLabel15.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel15.setText("Carrinho");

        jTableCarrinho.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableCarrinho.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableCarrinhoMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableCarrinho);

        jLabel16.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel16.setText("Valor Final R$:");

        jTextFieldQuantidadeValorFinalProduto.setEditable(false);
        jTextFieldQuantidadeValorFinalProduto.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTextFieldQuantidadeValorFinalProduto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldQuantidadeValorFinalProdutoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldQuantidadeValorFinalProdutoFocusLost(evt);
            }
        });
        jTextFieldQuantidadeValorFinalProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldQuantidadeValorFinalProdutoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldQuantidadeValorFinalProdutoKeyReleased(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel17.setText("Valor Total R$:");

        jTextFieldQuantidadeValorTotal.setEditable(false);
        jTextFieldQuantidadeValorTotal.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTextFieldQuantidadeValorTotal.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldQuantidadeValorTotalFocusLost(evt);
            }
        });
        jTextFieldQuantidadeValorTotal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldQuantidadeValorTotalKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldQuantidadeValorTotalKeyReleased(evt);
            }
        });

        jButtonFinalizarCompra.setBackground(new java.awt.Color(0, 168, 82));
        jButtonFinalizarCompra.setForeground(new java.awt.Color(255, 255, 255));
        jButtonFinalizarCompra.setText("Finalizar Venda");
        jButtonFinalizarCompra.setEnabled(false);
        jButtonFinalizarCompra.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jButtonFinalizarCompraFocusGained(evt);
            }
        });
        jButtonFinalizarCompra.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButtonFinalizarCompraMouseEntered(evt);
            }
        });
        jButtonFinalizarCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFinalizarCompraActionPerformed(evt);
            }
        });

        jButtonAlterar.setBackground(new java.awt.Color(68, 68, 66));
        jButtonAlterar.setForeground(new java.awt.Color(255, 255, 255));
        jButtonAlterar.setText("Editar");
        jButtonAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAlterarActionPerformed(evt);
            }
        });

        jButtonRemover.setBackground(new java.awt.Color(156, 32, 36));
        jButtonRemover.setForeground(new java.awt.Color(255, 255, 255));
        jButtonRemover.setText("Remover produto do Carrinho");
        jButtonRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoverActionPerformed(evt);
            }
        });

        jButtonCancelarVenda.setBackground(new java.awt.Color(156, 32, 36));
        jButtonCancelarVenda.setForeground(new java.awt.Color(255, 255, 255));
        jButtonCancelarVenda.setText("Cancelar Venda");
        jButtonCancelarVenda.setEnabled(false);
        jButtonCancelarVenda.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jButtonCancelarVendaFocusGained(evt);
            }
        });
        jButtonCancelarVenda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButtonCancelarVendaMouseEntered(evt);
            }
        });
        jButtonCancelarVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarVendaActionPerformed(evt);
            }
        });

        jTextFieldDesconto.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTextFieldDesconto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldDescontoFocusLost(evt);
            }
        });
        jTextFieldDesconto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldDescontoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldDescontoKeyReleased(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel19.setText("Valor Desconto R$:");

        jLabel20.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel20.setText("Valor Final R$:");

        jTextFieldValorFinal.setEditable(false);
        jTextFieldValorFinal.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTextFieldValorFinal.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldValorFinalFocusLost(evt);
            }
        });
        jTextFieldValorFinal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldValorFinalKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldValorFinalKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldQuantidadeVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldQuantidadeValorFinalProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jButtonAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                        .addComponent(jButtonRemover))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldQuantidadeValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel19)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldValorFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonFinalizarCompra))
                            .addComponent(jButtonCancelarVenda))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jTextFieldQuantidadeVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(jTextFieldQuantidadeValorFinalProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonRemover, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(jTextFieldQuantidadeValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(jTextFieldDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20)
                    .addComponent(jTextFieldValorFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonFinalizarCompra))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonCancelarVenda)
                .addGap(6, 6, 6))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setText("Fornecedor:");

        jTextFieldFornecedor.setEditable(false);
        jTextFieldFornecedor.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel11.setText("Dados Atuais:");

        jTextFieldProduto.setEditable(false);
        jTextFieldProduto.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTextFieldProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldProdutoKeyReleased(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel12.setText("Produto:");

        jLabel13.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel13.setText("Tipo do Produto:");

        jTextFieldTipoProduto.setEditable(false);
        jTextFieldTipoProduto.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jLabel18.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel18.setText("Valor Unitário");

        jTextFieldValorUnitario.setEditable(false);
        jTextFieldValorUnitario.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldFornecedor))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldTipoProduto, javax.swing.GroupLayout.DEFAULT_SIZE, 349, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel18)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldValorUnitario, javax.swing.GroupLayout.DEFAULT_SIZE, 370, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jLabel11)
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel13)
                        .addComponent(jTextFieldTipoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel12)
                        .addComponent(jTextFieldProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel18)
                        .addComponent(jTextFieldValorUnitario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(jTextFieldFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(62, 62, 62))
        );

        jComboBoxUsuarios.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jComboBoxUsuarios.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "*", "A" }));
        jComboBoxUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jComboBoxUsuariosMouseEntered(evt);
            }
        });
        jComboBoxUsuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxUsuariosActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel10.setText("Usuário:");

        jButtonPesquisar.setBackground(new java.awt.Color(68, 68, 66));
        jButtonPesquisar.setForeground(new java.awt.Color(255, 255, 255));
        jButtonPesquisar.setText("Pesquisar");
        jButtonPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPesquisarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldNumeroVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 486, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxUsuarios, 0, 243, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonPesquisar))
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldNumeroVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(jComboBoxUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldNumeroVendaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldNumeroVendaFocusLost
        
    }//GEN-LAST:event_jTextFieldNumeroVendaFocusLost

    private void jTextFieldQuantidadeVendaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldQuantidadeVendaFocusLost
 
    }//GEN-LAST:event_jTextFieldQuantidadeVendaFocusLost

    private void jTextFieldQuantidadeVendaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldQuantidadeVendaKeyPressed
       
    }//GEN-LAST:event_jTextFieldQuantidadeVendaKeyPressed

    private void jTextFieldQuantidadeVendaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldQuantidadeVendaKeyReleased
     
        try 
        {
            float valorUnitario = Float.parseFloat(jTextFieldValorUnitario.getText().replace(",","."));
     
            int quantidade = Integer.parseInt(jTextFieldQuantidadeVenda.getText().replace(",","."));

            float calc = quantidade * valorUnitario;

            jTextFieldQuantidadeValorFinalProduto.setText(""+calc);
            jButtonAlterar.setEnabled(true);
        } 
        
        catch (Exception e) 
        {
            jButtonAlterar.setEnabled(false);
            jTextFieldQuantidadeValorFinalProduto.setText("ERRO");
        }
   
     
    }//GEN-LAST:event_jTextFieldQuantidadeVendaKeyReleased

    private void jTextFieldQuantidadeValorFinalProdutoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldQuantidadeValorFinalProdutoFocusGained

       

    }//GEN-LAST:event_jTextFieldQuantidadeValorFinalProdutoFocusGained

    private void jTextFieldQuantidadeValorFinalProdutoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldQuantidadeValorFinalProdutoFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldQuantidadeValorFinalProdutoFocusLost

    private void jTextFieldQuantidadeValorFinalProdutoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldQuantidadeValorFinalProdutoKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldQuantidadeValorFinalProdutoKeyPressed

    private void jTextFieldQuantidadeValorFinalProdutoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldQuantidadeValorFinalProdutoKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldQuantidadeValorFinalProdutoKeyReleased

    private void jTextFieldQuantidadeValorTotalFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldQuantidadeValorTotalFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldQuantidadeValorTotalFocusLost

    private void jTextFieldQuantidadeValorTotalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldQuantidadeValorTotalKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldQuantidadeValorTotalKeyPressed

    private void jTextFieldQuantidadeValorTotalKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldQuantidadeValorTotalKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldQuantidadeValorTotalKeyReleased

    private void jTextFieldProdutoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldProdutoKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldProdutoKeyReleased

    private void jComboBoxUsuariosMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBoxUsuariosMouseEntered
        
    }//GEN-LAST:event_jComboBoxUsuariosMouseEntered

    private void jButtonPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPesquisarActionPerformed
        int linhas= jTableVendas.getRowCount();
        
        if(linhas!=0)
        {
            pesquisar();  
        }
      
    }//GEN-LAST:event_jButtonPesquisarActionPerformed

    private void jComboBoxUsuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxUsuariosActionPerformed
       
        int linhas= jTableVendas.getRowCount();
        
        if(linhas!=0)
        {
            pesquisar();  
        }
       
    }//GEN-LAST:event_jComboBoxUsuariosActionPerformed

    private void jButtonFinalizarCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFinalizarCompraActionPerformed

        int opc = JOptionPane.showConfirmDialog(null,"Deseja Aprovar esta venda?");
        String valor = null;
        if(opc==JOptionPane.YES_OPTION)
        {
            int linhas=jTableCarrinho.getRowCount();
        
            int linhasVenda = jTableVendas.getRowCount();
            if(linhas!=0)
            {
                
                String nr_venda=null;
                
                if(linhasVenda==1)
                {                  
                     nr_venda= jTableVendas.getValueAt(0, 0)+"";
                }
                else
                {
                     nr_venda= jTableVendas.getValueAt(jTableVendas.getSelectedRow(), 0)+"";
                }
                
                ControleVendas controleVendas = new ControleVendas();
                
                
               
                
                
                
                
                //Aprovação da Venda
                ModeloVenda modeloVenda = new ModeloVenda();
                modeloVenda.setNr_venda(Integer.parseInt(nr_venda));               
                modeloVenda.setId_usuario_aprovador(Integer.parseInt(usuario));              
                modeloVenda.setStatus_venda("A");
                controleVendas.alteraStatusVenda(modeloVenda);
                
                
                                              
                //Atualização do Valor de Desconto
                float valorDesconto = 0;
                valorDesconto = Float.parseFloat(jTextFieldDesconto.getText().replace(",","."));
                
                //System.out.println("VALOR DESCONTO: "+valorDesconto);
                
                modeloVenda.setDesconto(valorDesconto);
                
                controleVendas.atualizaDesconto(modeloVenda);
                
               //  String[] colunas = new String[]{"NÚMERO DA VENDA","PRODUTO",
               // "QUANTIDADE","VALOR UNITÁRIO","TOTAL","FORNECEDOR","TIPO","ID","ESTOQUE","USUARIO VENDA","ID_PRODUTO"};
                
                System.out.println("LINHAS: "+linhas);
                
                
                for(int i=0; i<linhas; i++)
                {
                    
                    //System.out.println("ENTROU NO FOR: "+i);
                    
                    //System.out.println("QUANTIDADE: "+jTableCarrinho.getValueAt(i, 2)+"");
                    
                    
                    
                    int quantidadeVenda= Integer.parseInt(jTableCarrinho.getValueAt(i, 2)+"");
                    int idProduto= Integer.parseInt(jTableCarrinho.getValueAt(i, 10)+"");
                    int idUsuario=Integer.parseInt(jTableCarrinho.getValueAt(i, 9)+"");
                    int estqInicial=Integer.parseInt(jTableCarrinho.getValueAt(i, 8)+"");
                    int estqMinimo = Integer.parseInt(jTableCarrinho.getValueAt(i, 11)+"");
                    
                    int estqFinal= estqInicial - quantidadeVenda;

                    ModeloProduto modeloProduto = new ModeloProduto();
                    modeloProduto.setId(idProduto);
                    modeloProduto.setDs_movimentacao("V");
                    modeloProduto.setId_usuario(idUsuario);
                    modeloProduto.setId_responsavel(Integer.parseInt(usuario));
                    modeloProduto.setEstoque_inicial(estqInicial);
                    modeloProduto.setEstoque_final(estqFinal);
                    modeloProduto.setObservacao(null);
                    
                    ControleProduto controleProduto = new ControleProduto();
                    controleProduto.gravaHistoricoProduto(modeloProduto);
                    
                    
                    
                    if(estqMinimo < estqFinal || estqFinal<=0 )
                    {
                        modeloProduto.setStatus_estoque("S");
                    }
                    else
                    {
                        modeloProduto.setStatus_estoque("N");            
                    }
                    
                     String total = jTextFieldValorFinal.getText();
                     
                     total = total.replace(",",".");
                     
                     double valorFinal = Double.parseDouble(total);
                     //System.out.println("VALOR DOUBLE: "+valorFinal);

                     
                     valor = NumberFormat.getCurrencyInstance().format(valorFinal);
                     //controleProduto.atualizaEstoqueProduto(modeloProduto);

                     
                }
                
                JOptionPane.showMessageDialog(null,"Venda aprovada com Sucesso!\nCobre "+valor+" do Cliente");
              
                int opc2 = JOptionPane.showConfirmDialog(null,"Deseja imprimir o comprovante da venda?");
          
                if(opc2==JOptionPane.YES_OPTION)
                {
                    ImpressaoVenda imp = new ImpressaoVenda();
                    imp.imprimeVenda(modeloVenda.getNr_venda()+"");
                }
            }
            principal.abreTela();
            this.dispose();
        }
    }//GEN-LAST:event_jButtonFinalizarCompraActionPerformed

    private void jTableVendasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableVendasMouseClicked
       if(evt.getClickCount() ==1)
       {
           String nr_venda= jTableVendas.getValueAt(jTableVendas.getSelectedRow(), 0)+"";
           
           String desconto = jTableVendas.getValueAt(jTableVendas.getSelectedRow(), 3)+"";
           
           desconto = desconto.replace(",",".");
           
           jTextFieldDesconto.setText(desconto);
           
           String valorFinal = jTableVendas.getValueAt(jTableVendas.getSelectedRow(), 4)+"";
           
           preencherTabelaCarrinho("SELECT VD.ID, NR_VENDA, USER.NM_USUARIO, FORN.NM_FORNECEDOR, PRD.NM_PRODUTO, VD.DS_QUANTIDADE, (TOTAL/VD.DS_QUANTIDADE) \n" +
            "AS VL_UNITARIO, TOTAL, TP.NM_TIPO, ESTQ.ESTOQUE, VD.ID_USUARIO_VENDA, PRD.ID AS ID_PRODUTO, PRD.DS_QUANTIDADE AS QUANTIDADE_MINIMA FROM VENDAS AS VD \n" +
            "JOIN USUARIOS AS USER ON USER.ID = \n" +
            "VD.ID_USUARIO_VENDA JOIN PRODUTOS AS PRD ON PRD.ID = VD.ID_PRODUTO JOIN FORNECEDORES AS FORN ON FORN.ID = PRD.ID_FORNECEDOR \n" +
            "JOIN TIPO_PRODUTO AS TP ON TP.ID = PRD.ID_TIPO JOIN ESTOQUE AS ESTQ ON ESTQ.ID_PRODUTO = PRD.ID\n" +
            "WHERE DS_STATUS_VENDA='P' AND NR_VENDA="+nr_venda+";","CLICKED");
           
           jButtonFinalizarCompra.setEnabled(true);
           jButtonCancelarVenda.setEnabled(true);
           
           jTextFieldValorFinal.setText(valorFinal);
       }
    }//GEN-LAST:event_jTableVendasMouseClicked

    private void jTableCarrinhoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableCarrinhoMouseClicked

        
        String produto= jTableCarrinho.getValueAt(jTableCarrinho.getSelectedRow(), 1)+"";
        String quantidade= jTableCarrinho.getValueAt(jTableCarrinho.getSelectedRow(), 2)+"";
        String valorUnitario= jTableCarrinho.getValueAt(jTableCarrinho.getSelectedRow(), 3)+"";
        String total= jTableCarrinho.getValueAt(jTableCarrinho.getSelectedRow(), 4)+"";
        String fornecedor= jTableCarrinho.getValueAt(jTableCarrinho.getSelectedRow(), 5)+"";
        String tipo= jTableCarrinho.getValueAt(jTableCarrinho.getSelectedRow(), 6)+"";
        
        jTextFieldProduto.setText(produto);
        jTextFieldTipoProduto.setText(tipo);
        jTextFieldFornecedor.setText(fornecedor);
        jTextFieldValorUnitario.setText(valorUnitario);
        jTextFieldQuantidadeVenda.setText(quantidade);
        jTextFieldQuantidadeValorFinalProduto.setText(total);
        
        jTextFieldQuantidadeVenda.setEditable(true);
        jTextFieldQuantidadeVenda.setEnabled(true);
    }//GEN-LAST:event_jTableCarrinhoMouseClicked

    private void jButtonAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAlterarActionPerformed
       ModeloVenda venda = new ModeloVenda();
       
       String id = jTableCarrinho.getValueAt(jTableCarrinho.getSelectedRow(), 7)+"";
       
       venda.setDs_quantidade(Integer.parseInt(jTextFieldQuantidadeVenda.getText()));
       venda.setTotal(Float.parseFloat(jTextFieldQuantidadeValorFinalProduto.getText()));
       
       venda.setId(Integer.parseInt(id));
       
       ControleVendas controleVendas = new ControleVendas();
       controleVendas.alteraProdutos(venda);
        
       String nr_venda= jTableVendas.getValueAt(jTableVendas.getSelectedRow(), 0)+"";
           
        preencherTabelaCarrinho("SELECT VD.ID, NR_VENDA, USER.NM_USUARIO, FORN.NM_FORNECEDOR, PRD.NM_PRODUTO, VD.DS_QUANTIDADE, (TOTAL/VD.DS_QUANTIDADE) \n" +
        "AS VL_UNITARIO, TOTAL, TP.NM_TIPO, ESTQ.ESTOQUE, VD.ID_USUARIO_VENDA, PRD.ID AS ID_PRODUTO, PRD.DS_QUANTIDADE AS QUANTIDADE_MINIMA FROM VENDAS AS VD \n" +
        "JOIN USUARIOS AS USER ON USER.ID = \n" +
        "VD.ID_USUARIO_VENDA JOIN PRODUTOS AS PRD ON PRD.ID = VD.ID_PRODUTO JOIN FORNECEDORES AS FORN ON FORN.ID = PRD.ID_FORNECEDOR \n" +
        "JOIN TIPO_PRODUTO AS TP ON TP.ID = PRD.ID_TIPO JOIN ESTOQUE AS ESTQ ON ESTQ.ID_PRODUTO = PRD.ID"+
         " WHERE DS_STATUS_VENDA='P' AND NR_VENDA="+nr_venda+";","ALTERAR");

        jButtonFinalizarCompra.setEnabled(true);
    }//GEN-LAST:event_jButtonAlterarActionPerformed

    private void jButtonRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoverActionPerformed
        removerProduto();
    }//GEN-LAST:event_jButtonRemoverActionPerformed

    private void jButtonCancelarVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarVendaActionPerformed
       int opc = JOptionPane.showConfirmDialog(null,"Deseja cancelar esta venda?");
        
        if(opc==JOptionPane.YES_OPTION)
        {
            int linhas=jTableCarrinho.getRowCount();
        
            int linhasVenda = jTableVendas.getRowCount();
            if(linhas!=0)
            {
                
                String nr_venda=null;
                
                if(linhasVenda==1)
                {                  
                     nr_venda= jTableVendas.getValueAt(0, 0)+"";
                }
                else
                {
                     nr_venda= jTableVendas.getValueAt(jTableVendas.getSelectedRow(), 0)+"";
                }
                
                ModeloVenda modeloVenda = new ModeloVenda();
                modeloVenda.setNr_venda(Integer.parseInt(nr_venda));               
                modeloVenda.setId_usuario_aprovador(Integer.parseInt(usuario));              
                modeloVenda.setStatus_venda("C");
                
                ControleVendas controleVendas = new ControleVendas();
                controleVendas.alteraStatusVenda(modeloVenda);
                
                ControleProduto controleProdutos = new ControleProduto();
                controleProdutos.cancelaVenda(modeloVenda.getNr_venda());
                
                
                JOptionPane.showMessageDialog(null,"Venda Cancelada com Sucesso!");
            }
            principal.abreTela();
            this.dispose();
        }
    }//GEN-LAST:event_jButtonCancelarVendaActionPerformed

    private void jTextFieldDescontoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldDescontoFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldDescontoFocusLost

    private void jTextFieldDescontoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldDescontoKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldDescontoKeyPressed

    private void jTextFieldDescontoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldDescontoKeyReleased
        calculaDesconto();
    }//GEN-LAST:event_jTextFieldDescontoKeyReleased

    private void jTextFieldValorFinalFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldValorFinalFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldValorFinalFocusLost

    private void jTextFieldValorFinalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldValorFinalKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldValorFinalKeyPressed

    private void jTextFieldValorFinalKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldValorFinalKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldValorFinalKeyReleased

    private void jButtonFinalizarCompraMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonFinalizarCompraMouseEntered
         if(jTextFieldDesconto.getText().isEmpty())
        {
            jTextFieldDesconto.setText("0");
        }
    }//GEN-LAST:event_jButtonFinalizarCompraMouseEntered

    private void jButtonFinalizarCompraFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButtonFinalizarCompraFocusGained
        if(jTextFieldDesconto.getText().isEmpty())
        {
            jTextFieldDesconto.setText("0");
        }
    }//GEN-LAST:event_jButtonFinalizarCompraFocusGained

    private void jButtonCancelarVendaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonCancelarVendaMouseEntered
        
        try {
            String desconto = jTableVendas.getValueAt(jTableVendas.getSelectedRow(), 3)+"";
        String valorFinal = jTableVendas.getValueAt(jTableVendas.getSelectedRow(), 4)+"";
        
        desconto = desconto.replace(",",".");
           
        jTextFieldDesconto.setText(desconto); 
        jTextFieldValorFinal.setText(valorFinal);
            
        } catch (Exception e) {
        }
        
    }//GEN-LAST:event_jButtonCancelarVendaMouseEntered

    private void jButtonCancelarVendaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButtonCancelarVendaFocusGained
        String desconto = jTableVendas.getValueAt(jTableVendas.getSelectedRow(), 3)+"";
        String valorFinal = jTableVendas.getValueAt(jTableVendas.getSelectedRow(), 4)+"";
        
        desconto = desconto.replace(",",".");
           
        jTextFieldDesconto.setText(desconto); 
        jTextFieldValorFinal.setText(valorFinal);
    }//GEN-LAST:event_jButtonCancelarVendaFocusGained
    
    void calculaDesconto()
    {
        if(!jTextFieldDesconto.getText().equals("0") && !jTextFieldDesconto.getText().isEmpty())
        {
            try 
            {
                float desconto =Float.parseFloat(jTextFieldDesconto.getText().replace(",",".")); 


                float total = Float.parseFloat(jTextFieldQuantidadeValorTotal.getText().replace(",","."));



                float valorFinal = total - desconto;

                String valorFinalFormat = metodos.formataFloats(valorFinal);

                jTextFieldValorFinal.setText(valorFinalFormat);

            } 
            catch (Exception e) {

                jTextFieldDesconto.setText("0");
            }
        }
        else
        {
            String total = jTextFieldQuantidadeValorTotal.getText();
            
            jTextFieldValorFinal.setText(total);
        }
    }
    void removerProduto()
    {
        int rows = jTableCarrinho.getRowCount();
    
        if(rows==1)
        {
            JOptionPane.showMessageDialog(null,
            "Atenção, só resta 1 linha, não é possível remover todos os produtos cancele a venda!!","Erro:",JOptionPane.ERROR_MESSAGE);
        }
        else
        {
            int linhaSelecionada = jTableCarrinho.getSelectedRow();

            if(linhaSelecionada <0)
            {
                JOptionPane.showMessageDialog(null,
                "Atenção, nenhum produto foi selecionado!","Erro:",JOptionPane.ERROR_MESSAGE);
            }
            else
            {

                String numeroVenda[] = new String[rows];
                String nomeProduto[] = new String[rows];
                String quantidade[] = new String[rows];
                String valorUnitario[] = new String[rows];
                String total[] = new String[rows];
                String nomeFornecedor[] = new String[rows];
                String nomeTipo[] = new String[rows];
                String id[] = new String[rows];
                String estoque[] = new String[rows];
                String idUsuario[] = new String[rows];
                String idProduto[] = new String[rows];
                String quantidadeMinima[] = new String[rows];

                ArrayList dados = new ArrayList();
                String[] colunas = new String[]{"NÚMERO DA VENDA","PRODUTO",
                "QUANTIDADE","VALOR UNITÁRIO","TOTAL","FORNECEDOR","TIPO","ID","ESTOQUE","USUARIO VENDA","ID_PRODUTO"};

                int row = jTableCarrinho.getRowCount();

                for(int r=0;r<rows;r++)
                {
                    if(r==linhaSelecionada)
                    {
                        total[r] = jTableCarrinho.getValueAt(r, 3).toString();
                        float valorProduto = Float.parseFloat(total[r]);
                        float valorAtual = Float.parseFloat(jTextFieldQuantidadeValorTotal.getText());

                        float valorFinal = valorAtual - valorProduto;

                        jTextFieldQuantidadeValorTotal.setText(valorFinal+"");

                        continue;
                    }
                    else
                    {
                        numeroVenda[r]= jTableCarrinho.getValueAt(r, 0).toString();
                        nomeProduto[r]= jTableCarrinho.getValueAt(r, 1).toString();
                        quantidade[r]= jTableCarrinho.getValueAt(r, 2).toString();
                        valorUnitario[r]= jTableCarrinho.getValueAt(r, 3).toString();
                        total[r]= jTableCarrinho.getValueAt(r, 4).toString();
                        nomeFornecedor[r]= jTableCarrinho.getValueAt(r, 5).toString();
                        nomeTipo[r]= jTableCarrinho.getValueAt(r, 6).toString();
                        id[r]= jTableCarrinho.getValueAt(r, 7).toString();
                        estoque[r]= jTableCarrinho.getValueAt(r, 8).toString();      
                        idUsuario[r]= jTableCarrinho.getValueAt(r, 9).toString();
                        idProduto[r]= jTableCarrinho.getValueAt(r, 10).toString();
                        quantidadeMinima[r]= jTableCarrinho.getValueAt(r, 11).toString();

                        dados.add(new Object[]{numeroVenda[r],nomeProduto[r],quantidade[r],
                        valorUnitario[r],total[r],nomeFornecedor[r],nomeTipo[r],
                        id[r],estoque[r],idUsuario[r],idProduto[r],quantidadeMinima[r]});

                    }

                }

                Conecta_Tabela ct = new Conecta_Tabela(dados, colunas);

                jTableCarrinho.setModel(ct);

                jTableCarrinho.getColumnModel().getColumn(0).setPreferredWidth(150);
                jTableCarrinho.getColumnModel().getColumn(0).setResizable(true);

                jTableCarrinho.getColumnModel().getColumn(1).setPreferredWidth(300);
                jTableCarrinho.getColumnModel().getColumn(1).setResizable(true);

                jTableCarrinho.getColumnModel().getColumn(2).setPreferredWidth(300);
                jTableCarrinho.getColumnModel().getColumn(2).setResizable(true);

                jTableCarrinho.getColumnModel().getColumn(3).setPreferredWidth(300);
                jTableCarrinho.getColumnModel().getColumn(3).setResizable(true);

                jTableCarrinho.getColumnModel().getColumn(4).setPreferredWidth(200);
                jTableCarrinho.getColumnModel().getColumn(4).setResizable(true);

                jTableCarrinho.getColumnModel().getColumn(5).setPreferredWidth(200);
                jTableCarrinho.getColumnModel().getColumn(5).setResizable(true);

                jTableCarrinho.getColumnModel().getColumn(6).setPreferredWidth(200);
                jTableCarrinho.getColumnModel().getColumn(6).setResizable(true);

                for(int i=5; i<=11;i++)
                {
                    jTableCarrinho.getColumnModel().getColumn(i).setMinWidth(0);
                    jTableCarrinho.getColumnModel().getColumn(i).setMaxWidth(0);
                }    
                jTableCarrinho.getTableHeader().setReorderingAllowed(false);
                jTableCarrinho.setAutoResizeMode(jTableCarrinho.AUTO_RESIZE_OFF);
                jTableCarrinho.setSelectionMode(ListSelectionModel.SINGLE_SELECTION); 
            }

        }
    }
    
    void pesquisar()
    {
        String usuario=null;
        String nr_venda=null;
        
        if(!jTextFieldNumeroVenda.getText().isEmpty())
        {
            nr_venda = jTextFieldNumeroVenda.getText();
        }    
        
        int index =jComboBoxUsuarios.getSelectedIndex();
        
        if(index<=0 && jTextFieldNumeroVenda.getText().isEmpty())
        {
            preencherTabela("SELECT NR_VENDA, SUM(TOTAL) AS TOTAL, VL_DESCONTO, (SUM(TOTAL)-VL_DESCONTO) AS VALOR_FINAL, \n" +
        "USER.NM_USUARIO FROM VENDAS AS VD JOIN USUARIOS AS USER ON USER.ID = \n" +
        "VD.ID_USUARIO_VENDA WHERE DS_STATUS_VENDA='P' GROUP BY NR_VENDA");
        }
        else
        {
            if(index>0)
            {
                index--;
                usuario = id_usuario[index]+"";
            }

            if(jTextFieldNumeroVenda.getText().isEmpty())
            {
                preencherTabela("SELECT NR_VENDA, SUM(TOTAL) AS TOTAL, VL_DESCONTO, (SUM(TOTAL)-VL_DESCONTO) AS VALOR_FINAL, \n" +
                "USER.NM_USUARIO FROM VENDAS AS VD JOIN USUARIOS AS USER ON USER.ID = \n" +
                "VD.ID_USUARIO_VENDA WHERE DS_STATUS_VENDA='P' AND USER.ID="+usuario
                + " GROUP BY NR_VENDA, USER.ID;");
            }
            else
            {
                preencherTabela("SELECT NR_VENDA, SUM(TOTAL) AS TOTAL, VL_DESCONTO, (SUM(TOTAL)-VL_DESCONTO) AS VALOR_FINAL, \n" +
                "USER.NM_USUARIO FROM VENDAS AS VD JOIN USUARIOS AS USER ON USER.ID = \n" +
                 "VD.ID_USUARIO_VENDA WHERE DS_STATUS_VENDA='P' AND USER.ID="+usuario
                + " OR NR_VENDA="+nr_venda+"  GROUP BY NR_VENDA, USER.ID;");
            }
        }
        
        
        if(jTableVendas.getRowCount() ==1)
        {
            String numeroVenda= jTableVendas.getValueAt(0, 0)+"";
           
           preencherTabelaCarrinho("SELECT VD.ID, NR_VENDA, USER.NM_USUARIO, FORN.NM_FORNECEDOR, PRD.NM_PRODUTO, VD.DS_QUANTIDADE, (TOTAL/VD.DS_QUANTIDADE) \n" +
            "AS VL_UNITARIO, TOTAL, TP.NM_TIPO, ESTQ.ESTOQUE, VD.ID_USUARIO_VENDA, PRD.ID AS ID_PRODUTO, PRD.DS_QUANTIDADE AS QUANTIDADE_MINIMA FROM VENDAS AS VD \n" +
            "JOIN USUARIOS AS USER ON USER.ID = \n" +
            "VD.ID_USUARIO_VENDA JOIN PRODUTOS AS PRD ON PRD.ID = VD.ID_PRODUTO JOIN FORNECEDORES AS FORN ON FORN.ID = PRD.ID_FORNECEDOR \n" +
            "JOIN TIPO_PRODUTO AS TP ON TP.ID = PRD.ID_TIPO JOIN ESTOQUE AS ESTQ ON ESTQ.ID_PRODUTO = PRD.ID" +
                        " WHERE DS_STATUS_VENDA='P' AND NR_VENDA="+numeroVenda+";","cont 1");
           
           jButtonFinalizarCompra.setEnabled(true);
        }
        
        else
        {
            ArrayList dados = new ArrayList();
            String[] colunas = new String[]{"NÚMERO DA VENDA","PRODUTO",
            "QUANTIDADE","VALOR UNITÁRIO","TOTAL","FORNECEDOR","TIPO","ID","ESTOQUE","USUARIO VENDA","ID_PRODUTO"};

            Conecta_Tabela ct = new Conecta_Tabela(dados, colunas);
            jTableCarrinho.setModel(ct);
            
            jTableCarrinho.getColumnModel().getColumn(0).setPreferredWidth(150);
            jTableCarrinho.getColumnModel().getColumn(0).setResizable(true);

            jTableCarrinho.getColumnModel().getColumn(1).setPreferredWidth(300);
            jTableCarrinho.getColumnModel().getColumn(1).setResizable(true);

            jTableCarrinho.getColumnModel().getColumn(2).setPreferredWidth(300);
            jTableCarrinho.getColumnModel().getColumn(2).setResizable(true);

            jTableCarrinho.getColumnModel().getColumn(3).setPreferredWidth(300);
            jTableCarrinho.getColumnModel().getColumn(3).setResizable(true);

            jTableCarrinho.getColumnModel().getColumn(4).setPreferredWidth(200);
            jTableCarrinho.getColumnModel().getColumn(4).setResizable(true);

            jTableCarrinho.getColumnModel().getColumn(5).setPreferredWidth(200);
            jTableCarrinho.getColumnModel().getColumn(5).setResizable(true);

            jTableCarrinho.getColumnModel().getColumn(6).setPreferredWidth(200);
            jTableCarrinho.getColumnModel().getColumn(6).setResizable(true);
            
            jTableCarrinho.getColumnModel().getColumn(7).setPreferredWidth(200);
            jTableCarrinho.getColumnModel().getColumn(7).setResizable(true);

            for(int i=5; i<=7;i++)
            {
                jTableCarrinho.getColumnModel().getColumn(i).setMinWidth(0);
                jTableCarrinho.getColumnModel().getColumn(i).setMaxWidth(0);
            }    
            
            jTextFieldQuantidadeValorTotal.setText("");

            jTableCarrinho.getTableHeader().setReorderingAllowed(false);
            jTableCarrinho.setAutoResizeMode(jTableCarrinho.AUTO_RESIZE_OFF);
            jTableCarrinho.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
            
        }
        
        
    }
    
    
    
    
    int id_usuario[] = new int[1000];
    
    void populaComboUsuarios()
    {
        MetodosPadrao metodo = new MetodosPadrao();
        jComboBoxUsuarios.removeAllItems();
        jComboBoxUsuarios.addItem("Selecione");
         Conecta_Banco conecta = new Conecta_Banco();
        try 
        {
           
            conecta.conexao();
            conecta.executaSQL("SELECT USER.ID, USER.NM_USUARIO FROM VENDAS AS "
            + "VD JOIN USUARIOS AS USER ON USER.ID = VD.ID_USUARIO_APROVADOR\n" +
            "WHERE DS_STATUS_VENDA='P' GROUP BY USER.NM_USUARIO;");
            int i=0;
            while(conecta.rs.next())                    
            {
                jComboBoxUsuarios.addItem(conecta.rs.getString("NM_USUARIO"));
                id_usuario[i] = conecta.rs.getInt("ID");
                i++;
            }
        } 
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Erro ao pesquisar Usuários: "+ ex,"Erro:",JOptionPane.WARNING_MESSAGE);
        }
        finally
        {
            conecta.desconecta();
        }
    }
      public void preencherTabela(String SQL) 
     {
         

        //System.out.println("SQL KLEIDIMAR: \n"+SQL);
        //MUDANDO A FONTE DO CABEÇALHO
        JTableHeader cabecalho = jTableVendas.getTableHeader();
        cabecalho.setFont(new java.awt.Font("Arial", 1, 12));


        ArrayList dados = new ArrayList();

        Conecta_Banco conecta = new Conecta_Banco();
        conecta.conexao();

        String[] colunas = new String[]{"NÚMERO DA VENDA","USUÁRIO","TOTAL","DESCONTO","VALOR FINAL"};

        conecta.executaSQL(SQL);
        try 
        {
            conecta.rs.first();
            do {
                String total = metodos.formataFloats(conecta.rs.getFloat("TOTAL"));
                String desconto = metodos.formataFloats(conecta.rs.getFloat("VL_DESCONTO"));
                String valorFinal = metodos.formataFloats(conecta.rs.getFloat("VALOR_FINAL"));
                
                dados.add(new Object[]{conecta.rs.getString("NR_VENDA"),
                conecta.rs.getString("NM_USUARIO").toUpperCase(),total,desconto,valorFinal
               });

            } while (conecta.rs.next());
        } catch (SQLException ex) {
           
            JOptionPane.showMessageDialog(null,"Nenhuma venda encontrada!");
            System.out.println(ex);
             
        }
        
        jTableVendas.getTableHeader().setReorderingAllowed(false);
        jTableVendas.setAutoResizeMode(jTableVendas.AUTO_RESIZE_OFF);
        jTableVendas.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        
        JTableHeader header =  jTableVendas.getTableHeader();
        DefaultTableCellRenderer centralizado = (DefaultTableCellRenderer) header.getDefaultRenderer();
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);

        Conecta_Tabela ct = new Conecta_Tabela(dados, colunas);
        jTableVendas.setModel(ct);


        jTableVendas.getColumnModel().getColumn(0).setPreferredWidth(200);
        jTableVendas.getColumnModel().getColumn(0).setResizable(true);
        
        jTableVendas.getColumnModel().getColumn(1).setPreferredWidth(600);
        jTableVendas.getColumnModel().getColumn(1).setResizable(true);
        
        jTableVendas.getColumnModel().getColumn(2).setPreferredWidth(200);
        jTableVendas.getColumnModel().getColumn(2).setResizable(true);
        
        jTableVendas.getColumnModel().getColumn(3).setPreferredWidth(200);
        jTableVendas.getColumnModel().getColumn(3).setResizable(true);
        
        jTableVendas.getColumnModel().getColumn(4).setPreferredWidth(200);
        jTableVendas.getColumnModel().getColumn(4).setResizable(true);
            
       
        jTableVendas.getTableHeader().setReorderingAllowed(false);
        jTableVendas.setAutoResizeMode(jTableVendas.AUTO_RESIZE_OFF);
        jTableVendas.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
      
    }
      
    public void preencherTabelaCarrinho(String SQL,String chamada) 
     {
         
         //System.out.println("chamada: "+chamada);

         //System.out.println("SQL: "+SQL);
        //MUDANDO A FONTE DO CABEÇALHO
        JTableHeader cabecalho = jTableCarrinho.getTableHeader();
        cabecalho.setFont(new java.awt.Font("Arial", 1, 12));


        ArrayList dados = new ArrayList();

        Conecta_Banco conecta = new Conecta_Banco();
        conecta.conexao();

        String[] colunas = new String[]{"NÚMERO DA VENDA","PRODUTO",
        "QUANTIDADE","VALOR UNITÁRIO","TOTAL","FORNECEDOR","TIPO","ID","ESTOQUE","USUARIO VENDA","ID_PRODUTO","QTD MINIMA"};

        float total=0;
        conecta.executaSQL(SQL);
        try 
        {
            
            conecta.rs.first();
            do {
             
               String totalFormat = metodos.formataFloats(conecta.rs.getFloat("TOTAL"));
               String valorUnitario = metodos.formataFloats(conecta.rs.getFloat("VL_UNITARIO"));
               
               dados.add(new Object[]{
               conecta.rs.getString("NR_VENDA").toUpperCase(),
               conecta.rs.getString("NM_PRODUTO"),
               conecta.rs.getString("DS_QUANTIDADE"),
               valorUnitario,
               totalFormat,
               conecta.rs.getString("NM_FORNECEDOR"),
               conecta.rs.getString("NM_TIPO"),
               conecta.rs.getString("ID"),
               conecta.rs.getString("ESTOQUE"),
               conecta.rs.getString("ID_USUARIO_VENDA"),
               conecta.rs.getString("ID_PRODUTO"),
               conecta.rs.getString("QUANTIDADE_MINIMA")

               });
               
             
               total = total+conecta.rs.getFloat("TOTAL");
            } while (conecta.rs.next());
            
            String totalFinalFormat = metodos.formataFloats(total);
            jTextFieldQuantidadeValorTotal.setText(totalFinalFormat);
        } catch (SQLException ex) {
           
            //JOptionPane.showMessageDialog(null,"NENHUM PRODUTO ENCONTRADO");
            System.out.println(ex);
             
        }
        
        jTableCarrinho.getTableHeader().setReorderingAllowed(false);
        jTableCarrinho.setAutoResizeMode(jTableVendas.AUTO_RESIZE_OFF);
        jTableCarrinho.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        
        JTableHeader header =  jTableCarrinho.getTableHeader();
        DefaultTableCellRenderer centralizado = (DefaultTableCellRenderer) header.getDefaultRenderer();
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);

        Conecta_Tabela ct = new Conecta_Tabela(dados, colunas);
        jTableCarrinho.setModel(ct);


        jTableCarrinho.getColumnModel().getColumn(0).setPreferredWidth(150);
        jTableCarrinho.getColumnModel().getColumn(0).setResizable(true);
        
        jTableCarrinho.getColumnModel().getColumn(1).setPreferredWidth(300);
        jTableCarrinho.getColumnModel().getColumn(1).setResizable(true);
        
        jTableCarrinho.getColumnModel().getColumn(2).setPreferredWidth(300);
        jTableCarrinho.getColumnModel().getColumn(2).setResizable(true);
        
        jTableCarrinho.getColumnModel().getColumn(3).setPreferredWidth(300);
        jTableCarrinho.getColumnModel().getColumn(3).setResizable(true);
        
        jTableCarrinho.getColumnModel().getColumn(4).setPreferredWidth(200);
        jTableCarrinho.getColumnModel().getColumn(4).setResizable(true);
        
        jTableCarrinho.getColumnModel().getColumn(5).setPreferredWidth(200);
        jTableCarrinho.getColumnModel().getColumn(5).setResizable(true);
        
        jTableCarrinho.getColumnModel().getColumn(6).setPreferredWidth(200);
        jTableCarrinho.getColumnModel().getColumn(6).setResizable(true);
       
        for(int i=5; i<=11;i++)
        {
            jTableCarrinho.getColumnModel().getColumn(i).setMinWidth(0);
            jTableCarrinho.getColumnModel().getColumn(i).setMaxWidth(0);
        }    
            
         
        
        jTableCarrinho.getTableHeader().setReorderingAllowed(false);
        jTableCarrinho.setAutoResizeMode(jTableCarrinho.AUTO_RESIZE_OFF);
        jTableCarrinho.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
      
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAlterar;
    private javax.swing.JButton jButtonCancelarVenda;
    private javax.swing.JButton jButtonFinalizarCompra;
    private javax.swing.JButton jButtonPesquisar;
    private javax.swing.JButton jButtonRemover;
    private javax.swing.JComboBox<String> jComboBoxUsuarios;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableCarrinho;
    private javax.swing.JTable jTableVendas;
    private javax.swing.JTextField jTextFieldDesconto;
    private javax.swing.JTextField jTextFieldFornecedor;
    private javax.swing.JTextField jTextFieldNumeroVenda;
    private javax.swing.JTextField jTextFieldProduto;
    private javax.swing.JTextField jTextFieldQuantidadeValorFinalProduto;
    private javax.swing.JTextField jTextFieldQuantidadeValorTotal;
    private javax.swing.JTextField jTextFieldQuantidadeVenda;
    private javax.swing.JTextField jTextFieldTipoProduto;
    private javax.swing.JTextField jTextFieldValorFinal;
    private javax.swing.JTextField jTextFieldValorUnitario;
    // End of variables declaration//GEN-END:variables
}
